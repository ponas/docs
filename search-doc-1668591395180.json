[{"title":"Lokalnett - CNaaS","type":0,"sectionRef":"#","url":"docs/cnaas/","content":"Lokalnett - CNaaS På denne siden kan du finne rutiner, tips og dokumentasjon relatert til &quot;Lokalnett - CNaaS&quot;. Se artikkel-liste til venstre for å finne de forskjellige artiklene.","keywords":""},{"title":"Begreper i IntArk","type":0,"sectionRef":"#","url":"docs/datadeling/begreper/","content":"","keywords":""},{"title":"Provisjonere​","type":1,"pageTitle":"Begreper i IntArk","url":"docs/datadeling/begreper/#provisjonere","content":"Å &quot;kopiere&quot; data fra et kildesystem til et endesystem, og holde dette fortløpende oppdatert. Mange systemer har behov for å provisjoneres, for eksempel med alle brukerkontoer som skal ha tilgang. Begrepet Integrasjon brukes som regel om å koble sammen tjenester, mens provisjonering er det å flytte data. Alternativt kan et system bli oppdatert med informasjon ved behov, ved såkalt Just In Time provisjonering (JIT). Et siste alternativ er systemer som ikke kan integrere, og du må legge inn data manuelt. Teknisk sett kan provisjonering foregå gjennom eOppslag, og bli hendelsesbasert ved bruk av eNotifikasjon. Eldre systemer integrerer ofte ved overføring av store, tunge filer, som har en del ulemper. Se også: Integrasjon, Just In Time provisjonering "},{"title":"Produsent​","type":1,"pageTitle":"Begreper i IntArk","url":"docs/datadeling/begreper/#produsent","content":"Se Tilbyder "},{"title":"Tilbyder​","type":1,"pageTitle":"Begreper i IntArk","url":"docs/datadeling/begreper/#tilbyder","content":"Rollen til en tjeneste eller person som tilbyr data. I utgangspunktet er tilbyderen autoritativt kildesystem for data som tilbys. Avhengig av konteksten, kan dette også være snakk om en person, gruppe eller enhet. Se også: Autoritativt kildesystem "},{"title":"Andre begrep​","type":1,"pageTitle":"Begreper i IntArk","url":"docs/datadeling/begreper/#andre-begrep","content":"Begrep\tForklaringKonsument\tRollen til en tjeneste eller system som ønsker å motta data fra en tilbyder. Avhengig av kontekst, kan dette også være snakk om en person, gruppe, enhet, utvikler eller sluttbruker. Tjenesteportefølje\tEn oversikt over tjenester. Tjenesteportefølje (Service Portfolio) er opprinnelig et oppslagsverk definert i ITIL for planlagte, aktive og nedlagte tjenester i virksomheten. Teknisk plattform gir en oversikt tjenesters integrasjoner. Konnektor\tEn tjeneste som integrerer mellom to systemer som ikke kan integreres direkte. Ofte gjøres dette med mikrotjenester. Konnektorer inneholder ofte forretningslogikk. Konnektorer bør følge IntArk, ved at de blant annet bruker åpne grensesnitt, har så løse koblinger som mulig, og at forretningslogikk og målsystem-spesifikke hensyn ikke legges i produserende system. Se mer under prinsippet Tjenesteorientert. Merk at andre kan bruke begrepet &quot;konnektor&quot; også for direkte-integrasjoner. Målsystem\tRollen til et system, når det henter data fra et kildesystem. Se også: Konsument. Endesystem\tSe: Målsystem, Konsument. Autoritativt kildesystem\tRollen til et system som institusjonen har bestemt skal være kildesystemet for spesifikke dataelementer. Se også: Tilbyder. Kildesystem\tSe: Autoritativt kildesystem. System\tEt IT-system. I denne konteksten brukes begrepet &quot;system&quot; for teknisk nivå, mens &quot;tjeneste&quot; brukes i brukersammenheng. Definisjonen er vag og brukes forskjellig, så begrepet bør unngås. Se også: Tjeneste. Tjeneste\tEn tjeneste er noe som tilbyr funksjonalitet for noen. Tjenesten kan tilbys av et system, eller i samspillet mellom flere system. Se også: System. API\tApplication Programming Interface: Maskinlesbart grensesnitt for en tjeneste eller system. IntArk setter noen føringer og anbefalinger for hvordan API til kildesystem skal fungere, for eksempel at vi bruker Web Service Se blant annet utforming av API. Se også: Web Service Sikker Datadeling\tEn tjeneste for å håndtere avtaler om tilganger til data. I tjenesten kan du som dataeier ha oversikt over hvem som har tilgang til hva i dine systemer, og du kan opprette, fornye og avvikle tilganger til data. Se også: API Manager Notifikasjon\tVi bruker begrepet i IntArk om tynne meldinger som sendes til og fra meldingskøen, primært i integrasjonsmønsteret hendelsesbasert oppdatering. Se eget dokument som beskriver notifikasjoner i mer detalj. API manager\tEn tjeneste som gir dataeiere kontroll over tilganger til sine API, og konsumenter mulighet for å få tilgang. API manager er et system som realiserer de funksjonelle. API manager er en sentral komponent i IntArks tekniske plattform. Se også: Sikker Datadeling API-katalog\tEn tjeneste som gir deg oversikt over alle API-er for en institusjon. I praksis inneholder ofte en API Manager også ein API-katalog. Se også: API Manager, Datakatalog Datatilbyder\tSe: Tilbyder Datakonsument\tSe: Konsument API gateway\tEn tjeneste som tar seg av selve tilgangskontrollen til API på systemnivå. Hvem som skal ha tilgang styres i API manager, og API gateway overholder dette. Dette er en sentral komponent i IntArks tekniske plattform. Applikasjon\tEn applikasjon er vanligvis definert som en samling programvare som tilbyr tjenester. Gravitee bruker begrepet for entiteter som får tilgang til API, altså konsumentene. En applikasjon har en eier, og kan bli gitt tilganger. Du søker om tilganger til API via applikasjonen du registrerer. Se også: Konsument, Tjeneste. Application\tSe: Applikasjon Authorization server\tEn rolle i Oauth 2-protokollen, som tar seg av tilgangskontroll. Se: Autorisasjonstjeneste Meldingskø\tEn tjeneste for å behandle meldinger og sikre at disse meldingene blir distribuert videre til tjenester som abonnerer på valgt type melding. For tiden brukes systemet RabbitMQ i IntArk. Merk: I IntArk-sammenheng snakker vi bare om meldingskø som tjenesten som behandler notifikasjoner og andre meldinger som skal bruker mellom tjenester. IntArk sier ingenting om meldingskøer som brukes internt i systemer. Se også: Notifikasjon API portal\tSe: API-katalog Autentiseringstjeneste\tEn tjeneste som kan autentisere sluttbrukeren og/eller systemet som ønsker å konsumere data. I Oauth2 blir autentiseringstjenesten spesifisert i mer detalj. Datakatalog\tEn oversikt over alle data, spesielt kildedata, som er tilgjengelig, og hvordan du kan få tilgang til dette. Dette er relatert til DigDirs &quot;Orden i eget hus&quot;. En datakatalog kan være en API-katalog, men det kan også være to uavhengige tjenester som kan relatere til hverandre. Det er planer om en felles datakatalog for sektoren i fremtiden. Se også: API-katalog. Autorisasjonstjeneste\tEn tjeneste som tar seg av tilgangskontrollen ved uthenting av data fra API. I Oauth2 er dette en rolle som er spesifisert i detalj, og der du som tjeneste eller sluttbruker får utsted en nøkkel (token) du kan bruke for å hente ut data. Nøkkelutsteder\tSe: Autorisasjonstjeneste Event streaming\tSe: Hendelsesstrømming Hendelsesstrømming\tNår du behandler mange meldinger under ett, kalles dette gjerne hendelsesstrømming. Se også: Meldingskø, Notifikasjoner Galvanisk skille\tOpprinnelig et elektronikk-begrep, men som er tatt inn for å beskrive tjenester som har et strengt skille mellom innlogging i applikasjonen og ikke i operativsystemet. Det er da et &quot;galvanisk skille&quot;, så innloggingshemmeligheter er isolert til applikasjonen. Et eksempel er webapplikasjoner som bruker Feide-pålogging. Se mer informasjon under forvaltningsveilederen. Retrofit\tRetrofit handler om å forlenge levetiden til gammel teknologi ved å legge på ny teknologi utenpå. I IntArk-sammenheng handler dette som oftest om å lage egne mikrotjenester som oversetter og forenkler integrasjon med et gammelt system, slik at den kan bli IntArk-kompatibelt. Se mer informasjon under forvaltning. Masterdata\tSe: Autoritativt kildesystem Web Service\tWeb Service (WS) er en type API (integrasjonsgrensesnitt), som er den vanligste måten å dele data på internett i dag. WS er en sekkebetegnelse, som inneholder blant annet RESTfulle API. IntArk anbefaler bruk av webservice for API. Se også: API Åpent grensesnitt\tEt åpent grensesnitt er et grensesnitt som alle skal kunne utvikle integrasjoner mot, i motsetning til proprietære, lukkede grensesnitt. Åpent grensesnitt er et krav i IntArk, og følger integrasjonsprinsippet om Tilgjengelighet: Autoritative data skal tilbys gjennom åpne grensesnitt. Grensenitt som er bransjestandard foretrekkes ofte, siden det reduserer faren for lock in. Autorisasjon\tAutorisasjon er prosessen med å bestemme om en autentisert entitet er berettiget å få en tilgang. Dette betyr at en tjeneste verifiserer, vha. regler som er satt for tjenesten, om entiteten skal gis en tilgang eller ikke. Tilgang kan for eksempel være om entiteten skal slippes inn i tjenesten, om de skal få ekstra funksjonalitet i tjenesten eller endret utseende på tjenesten. Tjenester som sjekker tilganger bedriver tilgangskontroll. Autoritativ\tAutoritativ refererer til hvem som bestemmer (autoritær). I IntArk-sammenheng er dette hvilket system eller tjeneste som er en autoritær kilde for data. Se: Autoritativt kildesystem Integrasjon\tDet å integrere tjenester i konteksten IT og arkitektur er det å påse at tjenester kommuniserer. Dette kan foregå som en dialog mellom tjenestene eller som monolog fra en tjeneste til en annen. Hensikten er å sikre at data blir kjent i de tjenester som trenger dem. Begrepet integrasjon brukes om selve den tekniske kommunikasjonen, mens begrepet datadeling er bredere og inkluderer også det utenfor det tekniske, for eksempel datakvalitet, ansvarsplassering og informasjonsforvaltning. Se også: Datadeling Datadeling\tDatadeling handler om alt som må til for at du skal kunne dele data mellom tjenester, prosesser og mennesker. Vi følger Digitaliseringsdirektoratets definisjon av datadeling: Datadeling handler om å forsyne forretningsprosesser og dataanalyse med nødvendig datagrunnlag. De fleste aktører sitter på begge sider i dette bildet, og må kunne både dele og innhente data og hendelser. I beskrivelsene skilles det likevel gjerne på rollene som tilbyder og konsument. Begrepet datadeling er ut fra dette å oppfatte som kortform for deling og innhenting av data og hendelser. Se også: Integrasjon Just In Time provisjonering\tJust In Time (JIT) provisjonering er provisjonering som gjøres i øyeblikket de provisjonerte dataene trengs. Et eksempel kan være at man slår opp informasjon om en bruker når vedkommende logger inn. Se også: Provisjonering Masterdata Management\tMasterdata Management (MDM) bestemmer hvilke system/tjeneste som er ansvarlig (autoritativ) for hvilke data. MDM omfatter også dataenes semantikk, som vil si hva dataene betyr ut fra gitt kontekst, og videre dataens kvalitet: Hvilken grad av feil og mangler er tolerert? Se også: Autoritativt kildesystem, Informasjonsforvaltning Informasjonsforvaltning\tProsesser, rutiner og funksjoner for å sikre god datakvalitet i institusjonens data. Mikrotjeneste\tEn liten webservice som er spesialisert til å gjøre én ting. Mer om Micro Services. Mikrotjenester som brukes i IntArk-sammenheng kalles for en konnektor. Se også: Konnektor Micro Service\tSe: Mikrotjeneste Return On Investment\tReturn On Investment (ROI): Et begrep om hva man får for en investering. I IntArk-sammenheng er ROI ofte vesentlig for å vurdere om en tjeneste skal oppgraderes for å kunne integreres med, eller om det skal vere et unntak. Dette fra prinsippet Fleksibel. Spørring\tHandlingen å ta kontakt med et API for å be om data. Fra engelsk &quot;request&quot;. Se også: Uttrekk Teknisk gjeld\tTeknisk gjeld er et abstrakt begrep som handler om endringer som må gjøres i en applikasjon for å få denne til å følge gjeldende regler, ønsket funksjonalitet og fleksibilitet, og etterkomme retningslinjer. Teknisk gjeld øker typisk gjennom en applikasjons levetid, med mindre teknisk gjeld adresseres. Økende teknisk gjeld medfører økt time-to-market og synkende return-on-investment. Enterprise Service Bus\tEnterprise Service Bus (ESB) er engelsk begrep for tjenestebuss. Se: Tjenestebuss Teknisk plattform\tIntArk sin tekniske plattform er verktøyet som hjelper institusjonene med å dele data trygt og sikkert, ved å gi oversikt over hvem som har tilgang til hvilke data. Time to Market\tTime To Market (TTM): Et begrep om tiden det tar å lansere funksjonalitet. En mer fleksibel arkitektur, med for eksempel løsere koblinger, gir kortere TTM. Uttrekk\tResultatet man får etter en spørring mot en webservice. Se også: Spørring Datakvalitet\tKvaliteten på data. God kvalitet er vesentlig for å kunne gjenbruke data, og med det ha en god og effektiv datadeling. Dataeier er ansvarlig for god datakvalitet for sine autoritative data. Noen kriterier til datakvalitet: At data er komplette At data er maskinlesbare At data er riktig formaterte At data er oppdaterte Tilstandsløs\tEn tjeneste som ikke lagrer egne data, inkludert sesjonsdata, er tilstandsløs. Tilstandsløse mikrotjenester er ofte enklere å håndtere, både fordi det er enklere å skalere horisontalt ved mye last, og krever mindre drift. Idempotent håndtering\tHvis et kall mot et endepunkt i et API er garantert å gi samme resultat ved gjentagende kall, er det idempotent. Dette er sentralt i hendelsesdrevet provisjonering. API-eier\tDen som er ansvarlig for et API hos en institusjon. Dette kan for eksempel være tjenesteansvarlig eller dataforvalter, eller være en egen rolle, avhengig av hvordan institusjonen har løst dette. Løs kobling\tEt prinsipp om at en integrasjon bør være mest mulig uavhengig av systemet, tjenesten eller leverandøren. En kobling mellom to system er løs hvis det er enkelt å bytte ut det ene systemet, uten at det andre systemet må endres. Se mer utdypende forklaring i Løs kobling. Tett kobling\tDet omvendte av en løs kobling. For integrasjoner ønsker du som regel ikke tette koblinger, da det gjør det vanskeligere eller mer kostbart å bytte ut systemer. Se: Løs kobling. Datasett\tEn samling av data-elementer. Se: Kildedata Kildedata\tDatasett som er autoritativt. Se: Autoritativt kildesystem. "},{"title":"Fellestjeneste for Datadeling (IntArk)","type":0,"sectionRef":"#","url":"docs/datadeling/","content":"","keywords":""},{"title":"Kom i gang med IntArk!​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"docs/datadeling/#kom-i-gang-med-intark","content":"Hvordan kommer min institusjon i gang med IntArkKom i gang med API managerAlle veiledereGode praksiser og anbefalinger "},{"title":"Hva er IntArk​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"docs/datadeling/#hva-er-intark","content":"Introduksjon: Hva er IntArkIntegrasjonsprinsippeneTeknisk plattform for datadelingBegreper "},{"title":"Informasjon for deg​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"docs/datadeling/#informasjon-for-deg","content":""},{"title":"Institusjonsansvarlig​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"docs/datadeling/#institusjonsansvarlig","content":" For deg som er ansvarlig for at institusjonen følger IntArk. "},{"title":"Anskaffer​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"docs/datadeling/#anskaffer","content":" For deg som anskaffer IT-tjenester og IT-systemer. "},{"title":"Utvikler​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"docs/datadeling/#utvikler","content":" For deg som utvikler IT-tjenester. "},{"title":"Dataeier​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"docs/datadeling/#dataeier","content":" For deg som er ansvarlig for innholdet i en tjeneste eller system. (Ofte er du også tjenesteeier) "},{"title":"Leverandør​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"docs/datadeling/#leverandør","content":" For deg som leverer eller ønsker å levere IT-tjenester til UH-sektoren. "},{"title":"Sluttbruker​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"docs/datadeling/#sluttbruker","content":" For deg som er sluttbruker av IntArk, for eksempel forsker eller student. "},{"title":"Kontakt og hjelp​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"docs/datadeling/#kontakt-og-hjelp","content":"Kontaktinformasjonen til SiktErfaringer fra andre "},{"title":"God praksis i fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"docs/datadeling/god-praksis/","content":"","keywords":""},{"title":"Integrasjonsmønster​","type":1,"pageTitle":"God praksis i fellestjenesten for Datadeling","url":"docs/datadeling/god-praksis/#integrasjonsmønster","content":"Anbefalte integrasjonsmønstre i bruk av fellestjenesten. Ved at flere følger samme mønstre blir det enklere å samarbeid og gjenbruke integrasjoner. For system-til-system-integrasjoner: Sanntidsoppdatert provisjonering: Hendelsesbasert provisjoneringFor tjenester som ikke ønsker egenlagring: Backend for frontendFor små tjenester med lave krav til oppdaterte data: Fullstendig synkronisering "},{"title":"Utforming av API​","type":1,"pageTitle":"God praksis i fellestjenesten for Datadeling","url":"docs/datadeling/god-praksis/#utforming-av-api","content":"Anbefalinger rundt API. Design av APIAnbefalt bruk av Web Services "},{"title":"Bruk av meldingskø​","type":1,"pageTitle":"God praksis i fellestjenesten for Datadeling","url":"docs/datadeling/god-praksis/#bruk-av-meldingskø","content":"Hvordan designe dine notifikasjoner "},{"title":"Datakvalitet​","type":1,"pageTitle":"God praksis i fellestjenesten for Datadeling","url":"docs/datadeling/god-praksis/#datakvalitet","content":"Generelt om god datakvalitet "},{"title":"Erfaringer fra bruk av IntArk","type":0,"sectionRef":"#","url":"docs/datadeling/erfaringer/","content":"Erfaringer fra bruk av IntArk For å hjelpe institusjoner med innføringen av IntArk samler vi opp erfaringer og publiserer de på dette området.","keywords":""},{"title":"API-design","type":0,"sectionRef":"#","url":"docs/datadeling/god-praksis/api-design/","content":"","keywords":""},{"title":"Prinsipper for godt API-design​","type":1,"pageTitle":"API-design","url":"docs/datadeling/god-praksis/api-design/#prinsipper-for-godt-api-design","content":"Utformingen av API bør følgeintegrasjonsprinsippene, som blant annet sier at du bør ha et åpent grensesnitt og det bør være så løst koblet som mulig. Dette følger også Digitaliseringsdirektoratets føringer, blant annet at data skal deles som de er, og ikke tilpasset enkelte konsumenter. Andre anbefalinger: Brukerorientert: Ha i bakhodet at brukernes behov kan endre seg raskt, og at vi også derfor bør kunne endre tjenester og funksjonalitet raskt. Endringsdyktighet kan fort være viktigere enn for eksempel hvor effektiv en integrasjon er. Tjenesteorientert: Bruk så løse koblinger som mulig, som vil si å gjøre det så enkelt som mulig å bytte ut tjenester på begge sider av en integrasjon. For eksempel: Bruk API-standarder, der det finnesBruk bransjestandarder, for eksempel RESTfulHold API-et på funksjonelt nivå, og unngå systemspesifikke detaljer.Bruk felles semantikk, hvis det finnes.Unngå skreddersøm for en enkelt konsument. Tilgjengelig: Lag et åpent grensesnitt, som vil si at spesifikasjonen av ditt API må være fritt tilgjengelig, dokumentert og leverandøruavhengig. Oversiktlig: Registrer ditt API i din institusjons API-katalog, og dokumenter den. Du bør som minimum følgeOpenAPI-spesifikasjonen (swagger). Etterrettelig: Konsumenter må snakke med ditt API via din institusjons API gateway. Dette gjør at institusjonen får samlet oversikt over dataflyt, og har kontroll og kan for eksempel sperre tilganger ved behov. I praksis betyr det at din WS bør støtte autentiseringsmekanismene som er tilgjengelig i fellestjenesten. Fleksibel: Unntak fra prinsipper og anbefalinger er tillatt, men må begrunnes. Det kan for eksempel bli vurdert å ikke være hensiktsmessig å utvikle et nytt API hvis en liten tjeneste har et proprietært API som fungerer greit nok. Vurderingen må gjøres med hensyn på institusjonen og sektoren som helhet, og ikke bare basert på den enkelte tjenesten. Effektiv: Konsumenter bør hente data direkte fra det institusjonen definerer som kildesystem, og ikke via andre tjenester. Unntaket er velbrukte katalogtjenester. Noen datasett kan være ønskelig å kombinere for mange konsumenter, som kan vere nyttig å sammenstille sentralt. Det er også lite effektivt om en institusjon har to ulike kildesystem for omtrent samme data. Sjekkliste for valg av typen API: Finnes det en API-standard for datasettet du skal tilby? Prioriter å bruke denne! Standardisering er veldig nyttig for løse koblinger, og gjør det enklere å bytte systemer, på begge sider av integrasjonen. Bruk bransjestandarder, der det finnes. For eksempel bruk av RESTful eller GraphQL. Se mer om anbefaling om Web services. Finnes det lignende data i andre kildesystemer? Det bør i så fall først avklares hvilken tjeneste som er kildesystem for hvilke data. Bruk lignende semantikk som i tilsvarende datasett andre steder, hvis mulig. Du anbefales å gjenbruke eksisterende datasett fradata.norge.no. Hvis det ikke finnes, kan du med fordel publisere ditt eget definerte datasett der. "},{"title":"Funksjonelt API​","type":1,"pageTitle":"API-design","url":"docs/datadeling/god-praksis/api-design/#funksjonelt-api","content":"Hold API på funksjonelt nivå så langt det er mulig. Unngå for eksempel å eksponere interne systemdetaljer i API-et, for eksempel hvilke databasetabeller du må snakke med. Konsumenter ønsker å fokusere på dataene, uten å måtte ha kunnskap om interne detaljer i systemet ditt. Se mer om funksjonelt API i anbefaling om bruk av webservices. Det er ofte vanskelig å klare å designe et API som er uavhengig av tekniske valg i en tjeneste. Det kan være en fordel med en dialog med ulike konsumenter, og se på tilsvarende datamodeller eller API-et til lignende tjenester. Det kan være nyttig å designe en første versjon av et API før valg av tjeneste bak, siden en unngår fallgruver i tekniske valg. RESTful gir ofte en godt grunnlag for et funksjonelt API, men mange fallgruver gjenstår. "},{"title":"Datasett​","type":1,"pageTitle":"API-design","url":"docs/datadeling/god-praksis/api-design/#datasett","content":"Det er forskjell på et API og et datasett. Begge deler bør designes og dokumenteres ved innføring av en ny datakilde. For et API må tekniske detaljer dokumenteres, for eksempel autentiseringsmetoder og endepunkt. For et datasett må begreper defineres og dataelementer beskrives. Datasett kan med fordel beskrives i API-katalogen. Dagens API manager støtter ikke statens anbefalte format for beskrivelser av datasett (DCAT), men kan beskrives i et dokument, eller med en lenke til beskrivelsen. "},{"title":"Personopplysninger​","type":1,"pageTitle":"API-design","url":"docs/datadeling/god-praksis/api-design/#personopplysninger","content":"Mange tjenester behandler personopplysninger. Da det er egne regler og lover som påvirker hvordan disse kan deles, anbefales det å skille personopplysninger fra andre data. Ved å holde dette adskilt blir det enklere å dele data som kan deles. Et eksempel: Et API gir oversikt over institusjonens organisasjonsenheter. Dette kan enkelt deles ut med hvem som helst, siden det er offentlige data. Men, hvis dette API-et i samme utplukk også lister ut hvilke ansatte og studenter som er aktiv på hver enhet, blir det straks mer utfordrende å gi tilgang. Å dele personopplysninger til konsumenter utenfor egen institusjon krever blant annet en databehandleravtale. Å dele personopplysninger internt hos institusjonen kan kreve en oppdatering av hjemmelsgrunnlaget for personpplysningene - følger datadelingen opprinnelig formål og hjemmel for den nye behandlingen? "},{"title":"Anskaffelse av tjenester​","type":1,"pageTitle":"API-design","url":"docs/datadeling/god-praksis/api-design/#anskaffelse-av-tjenester","content":"Også ved anskaffelse av IT-tjenester gjelder anbefalingene rundt deling av data, på samme måte som ved egen utvikling. Alle IT-tjenester med data som kan eller bør deles er anbefalt å ha et API som følger anbefalingene fra fellestjenesten. Ofte kommer innkjøpte IT-tjenester med et API, men det er ikke sikkert dette gir gevinstene du ønsker. Er API-et godt nok dokumentert? Følger det prinsippet om løse koblinger? Hvor lukket og leverandørspesifikt er API-et? Kan andre konsumenter bruke det? Følger det noen standarder? Kan institusjonen få inn endringer i API-et? Hva er lovnaden til ytelse og oppetid? Hvor mange konsumenter ville kunne brukt API-et samtidig? I anbud er det nyttig å legge inn krav til datadelingen, spesielt krav til API. For viktige tjenester kan det også være nyttig å definere hvilket API leverandøren må oppfylle, og hvis det ikke finnes en (bransje)standard til og med designe API-et på forhånd. Dette kan gjøre datadelingen enklere etter at IT-tjenesten er kjøpt inn. "},{"title":"Versjonering​","type":1,"pageTitle":"API-design","url":"docs/datadeling/god-praksis/api-design/#versjonering","content":"Konsumenter trenger forutsigbarhet. Når et API lanseres, bør konsumenter forvente at det fungerer i lang tid før konsumenten må gjøre endringer. Anbefalingen er som regel at en versjon av et API bør støttes i minst seks måneder. Dette gjør at versjonering bør vere med i designet av et API. Hvordan skal tjenesten din støtte å tilgjengeliggjøre data både i et API for eksisterende konsumenter og en nyere versjon av API-et? I RESTfulle API løses dette ofte med å legge på versjonen som del av stien til endepunktet. Noen eksempler: /v1/persons/ola /v2/persons/ola/contactinfo  For datatilbydere som også støtter notifikasjoner, bør dette også reflekteres i meldingene. Hvilken versjon av API-et skal notifikasjoner refere til? Kan/bør tjenesten støtte å sende ut en notifikasjon per aktive versjon av API-et? "},{"title":"Sjekkliste for API​","type":1,"pageTitle":"API-design","url":"docs/datadeling/god-praksis/api-design/#sjekkliste-for-api","content":"Hvis du designer et API: Er API-et på funksjonelt nok nivå?Følger API-et prinsippene til RESTful?Inneholder API teknisk terminologi som egentlig burde vært systeminterne?Trenger konsumenter å kjenne til interne detaljer om systemet bak for å kunne bruke API-et?Må du endre på API-et hvis du gjør endringer i tjenestens datamodell?Klarer du å unngå å eksponere personpplysninger, og likevel klare å tilgjengeliggjøre andre opplysninger?Har du dokumentert ditt API etter OpenAPI-spesifikasjonen (swagger)?Har du registrert API-et ditt i institusjoens API-katalog? "},{"title":"Anbefalinger for god datakvalitet","type":0,"sectionRef":"#","url":"docs/datadeling/god-praksis/datakvalitet/","content":"","keywords":""},{"title":"Ansvar og plikter​","type":1,"pageTitle":"Anbefalinger for god datakvalitet","url":"docs/datadeling/god-praksis/datakvalitet/#ansvar-og-plikter","content":"Datatilbyder er ansvarlig for at sine autoritative data holder god datakvalitet. Som oftest blir dette plassert hos dataforvalter. "},{"title":"Hva er datakvalitet?​","type":1,"pageTitle":"Anbefalinger for god datakvalitet","url":"docs/datadeling/god-praksis/datakvalitet/#hva-er-datakvalitet","content":"Datakvalitet handler om at dataene er til å stole på, og at de kan gjenbrukes av andre. At data er kompletteAt data er maskinlesbareAt data er riktig formaterteAt data er oppdatert "},{"title":"Hvorfor trengs god datakvalitet?​","type":1,"pageTitle":"Anbefalinger for god datakvalitet","url":"docs/datadeling/god-praksis/datakvalitet/#hvorfor-trengs-god-datakvalitet","content":"God datakvalitet gjør det enklere å gjenbruke dataene, som skaper mer effektiv datadeling. Dårlig datakvalitet kan føre til: Konsumenter slutter å bruke kildedataen, og en mister gevinstene med gjenbruk. Konsumenter kan begynne å produsere egne data, eller &quot;vaske&quot; kildens data. I praksis har konsumenten innført et nytt kildesystem med tilnærmet like data. For institusjonen kan dette føre til ekstrakostnader og forvirring. "},{"title":"Hvordan sikre god datakvalitet?​","type":1,"pageTitle":"Anbefalinger for god datakvalitet","url":"docs/datadeling/god-praksis/datakvalitet/#hvordan-sikre-god-datakvalitet","content":"Dataforvalter må: Være bevisst på sitt ansvar for datakvalitetenEvaluere sine dataHa rutiner for å sikre god datakvalitet Konsumenter må: Hente data fra det institusjonen har definert autoritativt kildesystem for dataene, og ikke via tredjeparter. Katalogtjenester, som AD og LDAP, er mulige å bruke så lenge de ikke har endret på de autoritative dataene. Varsle/informere dataeier ved dårlig datakvalitet, for eksempel feil i data. "},{"title":"Se også​","type":1,"pageTitle":"Anbefalinger for god datakvalitet","url":"docs/datadeling/god-praksis/datakvalitet/#se-også","content":"Nasjonal verktøykasse for deling av data Veileder for orden i eget hus "},{"title":"Beskrivelser av datasett","type":0,"sectionRef":"#","url":"docs/datadeling/god-praksis/datakvalitet/datasett/","content":"","keywords":""},{"title":"Hvordan beskrive datasett i fellestjenesten?​","type":1,"pageTitle":"Beskrivelser av datasett","url":"docs/datadeling/god-praksis/datakvalitet/datasett/#hvordan-beskrive-datasett-i-fellestjenesten","content":"Dagens API-katalog støtter ikke DCAT sine filformat ut av boksen. Det er to måter å beskrive datasettet i API-katalogen: Beskriv datasettet på data.norge.no eller tilsvarende tjenester, og lenk til denne fra API-katalogen. Beskriv datasettet i et vanlig dokument under API-et i API-katalogen. "},{"title":"Integrasjonsmønstre i fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"docs/datadeling/god-praksis/integrasjonsmonster/","content":"","keywords":""},{"title":"Introduksjon​","type":1,"pageTitle":"Integrasjonsmønstre i fellestjenesten for Datadeling","url":"docs/datadeling/god-praksis/integrasjonsmonster/#introduksjon","content":"Ulike behov og tjenester har ulike behov for typen integrajon. Mønstrene beskrevet her er basert på erfaringer fra sektoren, og dekker de viktigste behovene. Fellestjenesten krever ikke at du må bruke disse mønstrene, da de bare er anbefalinger, men det er gevinster ved å integrere likt som andre. Det gjør det enklere å samarbeide om integrasjon, øker sjansen for gjenbruk, og er mønster som sektoren har gode erfaringer med. Det er også disse mønstrene fellestjenesten har god støtte for. Vi skiller mellom to forskjellige typer integrasjonsmønstre: Integrasjoner der sluttbruker er involvert.System-til-system-integrasjoner. Fokuset i fellestjenesten er system-til-system-integrasjoner. "},{"title":"API som datalager","type":0,"sectionRef":"#","url":"docs/datadeling/god-praksis/integrasjonsmonster/datalager/","content":"","keywords":""},{"title":"Når bør dette brukes?​","type":1,"pageTitle":"API som datalager","url":"docs/datadeling/god-praksis/integrasjonsmonster/datalager/#når-bør-dette-brukes","content":"Dette mønsteret kan passe for IT-tjenester som er frontendtjenester, for eksempel portalsider på nett som skal samle informasjon fra forskjellige kilder. Når du ønsker å gjenbruke oppdaterte data i en tjeneste, uten å måtte duplisere alle data. Eksempler på tjenester: Nettportal for studenter, der studenten logger på og får oversikt over sine detaljer, for eksempel informasjon om sine emner (fra FS), undervisningstider (fra kalendersystemet), sine eksamener (fra LMS-system som Canvas), hvor alt dette skjer (fra rombookingssystemet) og sine pensumlister. "},{"title":"Fordeler​","type":1,"pageTitle":"API som datalager","url":"docs/datadeling/god-praksis/integrasjonsmonster/datalager/#fordeler","content":"Sluttbrukerne får ferskere data.Konsumenten får det enklere, ved å slippe å forholde seg til eget datalager, provisjonering og alt som følger med. For eksempel å slippe å rydde i gamle data. Dette kan gjøre det raskere og billigere for institusjonen å sette opp nye tjenester. "},{"title":"Ulemper​","type":1,"pageTitle":"API som datalager","url":"docs/datadeling/god-praksis/integrasjonsmonster/datalager/#ulemper","content":"Datatilbyder får høyere krav til ytelse og responstid for API-et. Sluttbrukere har ofte lav toleranse for ventetid. Caching bør vurderes. Ressursbruken vil variere veldig avhengig av målgruppen. For eksempel vil studenttjenester ha veldig høy belastning ved studiestart, men veldig liten aktivitet på nattestid. "},{"title":"Fallgruver​","type":1,"pageTitle":"API som datalager","url":"docs/datadeling/god-praksis/integrasjonsmonster/datalager/#fallgruver","content":"Konsument må kommunisere med tilbyder om forventninger om last, så tilbyder har mulighet for å skalere opp ved behov. Konsument bør hente data direkte fra kildesystemet og ikke fra et mellomsystem. Hvis ikke kan det kan skape utfordringer når data ikke er korrekte i alle systemer, og det gjør det vanskeligere å få oversikt over all dataflyt hos institusjonen. Datatilbyder er ikke kommunisert godt nok med om forventet last. Økt last vil kunne føre til at API-et går ned og tjenesten slutter å fungere. "},{"title":"Eksempler​","type":1,"pageTitle":"API som datalager","url":"docs/datadeling/god-praksis/integrasjonsmonster/datalager/#eksempler","content":"En portal for studentene kan raskt gi studenten en samlet oversikt over data som er relevant for de. For eksempel å hente ut siste nyhetssaker fra påmeldte emner, tidspunkt for neste forelesning og innleveringsfrist, og siste nytt fra sine studentforeninger. Portalen trenger ikke å lagre alle slike opplysninger internt, men hente de fra relevante datatilbydere på direkten. "},{"title":"Hendelsesbasert provisjonering","type":0,"sectionRef":"#","url":"docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/","content":"","keywords":""},{"title":"Hvorfor dette mønsteret?​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#hvorfor-dette-mønsteret","content":"Dette mønsteret gjør at mindre data trenger å overføres, og at konsumentene kan bli oppdatert umiddelbart. Dette uten behov for å hente absolutt alle data fra tilbyderen, eller at datatilbyder må selv dytte data ut til hver enkelt konsument. Tradisjonelt har man brukt tunge, filbasertebatch-oppdateringerfor å provisjonere tjenester. Dette er ikke en effektiv måte å integrere på, fordi produsenten må samle og overføre komplette datasett, og konsumenten må sammenligne det komplette datasettet i hver runde. Det hendelsesbaserte mønsteret effektiviserer integrasjonen, og gjør at bare nødvendige data kan overføres, raskere. Mønsteret er ikke designet for tjenester som trenger historiske data eller trenger å &quot;spille av&quot; tidligere endringer. Slike tjenester vil fort kunne ha behov for mer komplisert funksjonalitet, enten at datatilbyder eller konsument lagrer slik historikk selv, eller mer avansert mellomvare enn enkle meldingskøer. Bruken av meldingskøer for å håndtere notifikasjoner om endringer er valgt av tekniske grunner. Meldingskøer er effektive og lite kompliserte, og gjør at datatilbyder slipper å måtte forholde seg til hver enkelt konsument i utsendingen. Alternative metoder, som HTTP-kall eller websockets, har ikke vært modne nok og har ført til mer kompleksitet hos datatilbyder, og har derfor blitt valgt bort. Tekniske endringer i fremtiden kan endre på denne anbefalingen. "},{"title":"Teknisk flyt​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#teknisk-flyt","content":" En typisk flyt med dette integrasjonsmønsteret: Datatilbyder får endret data om en entitet, for eksempel fordi en saksbehandler gjør endringer.Datatilbyder sender ut en notifikasjon til meldingskø-tjenesten, RabbitMQ, om at noe har skjedd. Notifikasjonen inneholder lite data, annet enn hvilken entitet det gjelder.Meldingskø-tjenesten tar i mot notifikasjonen og distribuerer den videre til alle konsumenter som abonnerer på dataene de gjelder.Konsumenten mottar notifikasjonen, og ser om den er relevant.Konsumenten henter ut data fra kildesystemet sitt API.Konsumenten oppdaterer sine interne data. Hvis konsumenten selv er tilbyder av andre kildedata som blir oppdatert basert på dette, vil konsumenten bytte rolle til datatilbyder og gå gjennom samme prosessen. Et eksempel på dette er at en ansatt får endret sitt navn i personalsystemet, som gjør at e-posttjenesten endrer primær e-postadresse, som gjør at andre konsumenter endrer sine data. I dette tilfellet kan også personalsystemet være en konsument og oppdatere den ansatte sin e-postadresse indirekte grunnet navneendringen. Merk at e-posttjenesten skal ikke sende ut notifikasjoner om at navn er endret, siden det er personalsystemets ansvar, men bare for endret e-postadresse. Et eksempel fra flyten over: En saksbehandler endrer mobilnummeret til en ansatt i personalsystemet (datatilbyderen).Personalsystemet sender notifikasjonen &quot;person-objekt med id 123 er endret&quot; til RabbitMQ.RabbitMQ sender notifikasjonen videre til konsumentene som abonnerer på de. En av disse kan være et CMS med personpresentasjoner.CMS mottar notifikasjon om at person 123 er endret. CMS ser at denne personen er registrert hos seg, og trenger derfor å reagere.CMS kaller på API-et til tjenesten, via API manager, og henter ut data om personen. Avhengig av granulariteten til datatilbyder, vil CMS enten få returnert mobilnummeret eller flere personopplysninger.CMS sammenlikner personopplysningene, og oppdatere data som er endret. "},{"title":"Når bør dette brukes?​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#når-bør-dette-brukes","content":"Dette mønsteret passer når du trenger å provisjonere et endesystem med kildedata fra en tilbyder, uten at sluttbrukeren er involvert. Dette mønsteret bør brukes når noen forventer at data er tilgjengelig tilnærmet umiddelbart, eller når fortløpende oppdateringer gir en bedre brukeropplevelse. Det er ofte en kost-nytte-vurdering om raskt oppdaterte data gir nok gevinster til å veie opp for kostnadene. Ofte blir gevinstene undervurderte, da indirekte kostnader ikke blir inkludert - når data blir raskt oppdaterte øker tilliten til de og de blir brukt mer og av flere konsumenter. "},{"title":"Fordeler​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#fordeler","content":"Data blir oppdatert raskere i mange systemer - &quot;tilnærmet umiddelbart&quot;. Dette gir ofte en bedre brukeropplevelse, og mer tillit til dataene og tjenesten. Mye mindre ressurskrevende enn det eldre mønsteret der du henter alledata fra kilden, og oppdaterer konsumenten. "},{"title":"Ulemper​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#ulemper","content":"Passer best for system-til-system-integrasjoner. Har du veldig mange konsumenter vil det sette høyere krav til ytelsen hos datatilbyder. Dette kan kompenseres ved for eksempel caching i API manager. Å implementere notifikasjonsutsending hos datatilbyder kan være krevende å implementere. Det kan også være ukjent teknologi for mange utviklere. Mønsteret koster mer å implementere enn en gammeldags fullsynk. "},{"title":"Eksempler​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#eksempler","content":"DFØ sine API støtter utsending av hendelser når det skjer endringer i deres API. Overføring av notifikasjoner fra DFØ til din institusjon må settes opp - ta kontakt. Flere IGA-løsninger, som Rapid Identity og Cerebrum, støtter utsending av hendelser når det skjer endringer på brukerkontoer og grupper. Flere og flere tjenester i sektoren støtter utsending av notifikasjoner ved endringer i sine data, spesielt de som utvikles av sektoren selv. "},{"title":"Fallgruver​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#fallgruver","content":"Datatilbyder skal bare sende ut notifikasjoner når data faktisk er endrethos seg selv, og ikke sende ut notifikasjoner bare fordi tjenesten har mottatt notifikasjoner fra andre. Falske positive notifikasjoner vil føre til mer ressursbruk, siden det kan føre til unødvendige API-oppslag fra konsumenter. I verste fall vil du kunne få evige meldingsløkker hvis to systemer som snakker sammen gjør samme feilen - de vil sende samme notifikasjonen fram og tilbake, uten stopp. Notifikasjonene er tynne - inneholder få data - men de vil likevel kunne inneholde personopplysninger: en identifikator til en person eller til data som tilhører en enkelt person. Notifikasjonene må derfor behandles som personopplysninger. Fordelen med at notifikasjonene er tynne, er at du reduserer risikoen for at de inneholder personopplysninger som krever ekstraordinære tiltak, for eksempel helseopplysninger, da dette skal beskyttes bak datatilbyders API. "},{"title":"Se også​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#se-også","content":"Utforming av notifikasjoner "},{"title":"Gammeldags fullstendig provisjonering","type":0,"sectionRef":"#","url":"docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/","content":"","keywords":""},{"title":"Når bør dette brukes?​","type":1,"pageTitle":"Gammeldags fullstendig provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/#når-bør-dette-brukes","content":"Dette mønsteret bør vanligvis ikke brukes, men kan vurderes for mindre tjenester som ikke har behov for oppdaterte data. Mønsteret gjelder system-til-system-integrasjoner, altså der sluttbrukeren ikke er direkte involvert. "},{"title":"Fordeler​","type":1,"pageTitle":"Gammeldags fullstendig provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/#fordeler","content":"Ofte det enkleste og rimeligste alternativet å utvikle. "},{"title":"Ulemper​","type":1,"pageTitle":"Gammeldags fullstendig provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/#ulemper","content":"Passer best for system-til-system-integrasjoner.Fullstendige provisjoneringer tar tid, så du vil få forsinkelser. Sluttbrukere har ofte forvetninger om at tjenester skal vere klare umiddelbart.Fullstendige provisjeringer er ressurskrevende, spesielt for kildesystemet, og ved store datamengder.Har du veldig mange konsumenter vil det sette høyere krav til ytelsen hos tilbyderen. Dette kan kompenseres ved for eksempel caching i API manager. "},{"title":"Fallgruver​","type":1,"pageTitle":"Gammeldags fullstendig provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/#fallgruver","content":"Integrerer via et standard API, og ikke ta snarveier om filer. Eldre kildesystemer har ofte brukt dette mønsteret, men basert seg på å produserer egne filer med relevante data, ofte skreddersydd per konsument. Dette frarådes, da det reduserer muligheten for gjenbruk, og du får sikkerhetsutfordringer rundt fildeling og opprydning. Selv med dette mønsteret bør data deles gjennom et standard API. Opprydding vil kunne skape utfordringer, spesielt ved uthenting av subsett fra kildesystemet. "},{"title":"Se også​","type":1,"pageTitle":"Gammeldags fullstendig provisjonering","url":"docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/#se-også","content":"Hendelsesbasert provisjoneringUtforming av API "},{"title":"Hvordan designe dine notifikasjoner","type":0,"sectionRef":"#","url":"docs/datadeling/god-praksis/notifikasjonsdesign/","content":"","keywords":""},{"title":"Anbefalt standard​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"docs/datadeling/god-praksis/notifikasjonsdesign/#anbefalt-standard","content":"Hver tilbyder står selv fritt til å velge format på sine notifikasjoner, men vi anbefaler standarden CloudEvent. Dette fordi det er en system- og leverandøruavhengig standard som kan brukes av alle, og inneholder mange av de samme slutningene som vi har erfart. Notifikasjoner bør også følge de samme føringene som ved utforming av API. Vi fraråder å lage egne notifikasjoner som er skreddersydde for spesifikke konsumenter, men lage notifikasjoner som er generelle og standardiserte nok til å kunne brukes av alle konsumenter. "},{"title":"Hva bør en notifikasjon inneholde?​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"docs/datadeling/god-praksis/notifikasjonsdesign/#hva-bør-en-notifikasjon-inneholde","content":"Meningen med en notifikasjon er å fortelle konsumenter at noe har skjedd i kildesystemet, slik at de kan vurdere om de skal gjøre noe. Ved at tilbyder selv sier i fra, slipper tilbyder at hver enkelt konsument jevnlig spør etter om noe nytt har skjedd siden sist. Notifikasjonen trenger som minimum å fortelle konsumentene: Hvilket system, instans eller API dette gjelder. Så konsumenten vet hvor data skal hentes fra. Hvilket endepunkt, entitet eller objekt endringen gjelder for. Det er også en fordel om notifikasjonen inneholder: Hvilken type endring det er snakk om. Er det for eksempel oppretting, endring eller sletting av en entitet? Hvilket tidspunkt gjelder endringen for. Hvilke attributter har blitt endret. Dette er optimalisering. Mer metadata om en endring gjør det enklere for konsumenter å filtrere bort endringer som er irrelevante for de. Dette skaper igjen mindre last på produsenten, siden færre konsumenter trenger å slå opp for å sjekke. "},{"title":"Framtidige hendelser​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"docs/datadeling/god-praksis/notifikasjonsdesign/#framtidige-hendelser","content":"I noen tilfeller vil en endring ikke være gyldig før på et senere tidspunkt. For eksempel at en saksbehandler oppretter en ny ansatt, men som ikke skal starte før om to uker. Tilbyderen sender en notifikasjon på tidspunktet registreringen skjedde, i dette tilfellet når den ansatte ble registrert. Tilbyderen har ikke ansvar for å sende ut en ny notifikasjon på tidspunktet endringen trer i kraft, selv om tilbyder gjerne må gjøre det. Det er konsumenten som er ansvarlig for å reagere på riktig tidspunkt, ikke tilbyder. Bakgrunnen for ansvarsfordelingen er at tidspunkt for reaksjon er ulik hos konsumentene - det er forretningslogikk som ikke bør ligge hos tilbyder. I eksempelet med nyansatte kan for eksempel personpresentasjonsløsningen trenge å publisere personen samme dag som startdato i avtalen, mens IGA vil måtte opprette en brukerkonto kanskje fem dager før startdato. Andre konsumenter trenger kanskje ikke å forholde seg til startdato i det hele tatt, men provisjonere den nyansatte umiddelbart. "},{"title":"Eksempler på notifikasjoner​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"docs/datadeling/god-praksis/notifikasjonsdesign/#eksempler-på-notifikasjoner","content":"Eksempel på en notifikasjon som bruker CloudEvents-standarden: { &quot;specversion&quot; : &quot;1.0&quot;, &quot;type&quot; : &quot;no.uio.cerebrum.account.create&quot;, &quot;source&quot; : &quot;https://cerebrum-uio.uio.no&quot;, &quot;subject&quot; : &quot;https://cerebrum-uio.uio.no/api/v2/accounts/123456&quot;, &quot;id&quot; : &quot;4d3559ec67504aaba65d40b0363faad8&quot;, &quot;time&quot; : &quot;2020-10-29T09:01:14Z&quot;, }  Dette eksempelet er en typisk &quot;tynn melding&quot;, som forteller deg at en brukerkonto har blitt opprettet, men ikke så mye annet. For å vite mer om brukerkontoen må du snakke med API-et som subject peker til. Eksempel på en mye enklere notifikasjon: accounts/123456  For enkle tjenester kan dette være godt nok. De fleste tilbydere er likevel tjent med å eksponere mer detaljer, spesielt for å redusere antal spørringer fra konsumentene. "},{"title":"Eksempler på tjenester​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"docs/datadeling/god-praksis/notifikasjonsdesign/#eksempler-på-tjenester","content":"NTNU sin OrgReg gir ut notifikasjoner som følger CloudEvents-standarden. IGA-løsninger, som Rapid Identity og Cerebrum, gir ut notifikasjoner. Se gjerne i institusjonenes API-kataloger for detaljer om notifikasjoner fra de enkelte tjenestene. "},{"title":"Hvorfor tynne meldinger?​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"docs/datadeling/god-praksis/notifikasjonsdesign/#hvorfor-tynne-meldinger","content":"Tynne meldinger gir en enklere flyt for provisjoneringsløsninger, som har fokus på status her og nå. Meldingene er tynne for å redusere mengden personopplysninger, og unngår at konsumentene behandler det som kildedata. Meldinger kan bli forsinket, for eksempel at de ligger på vent i meldingskøen mens konsumenten er nede, og vil fort kunne inneholde utdaterte data. "},{"title":"Fallgruver​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"docs/datadeling/god-praksis/notifikasjonsdesign/#fallgruver","content":"Notifikasjonene gir bare informasjon om at noe har skjedd, og ikke hva som har skjedd. Ikke se på notifikasjoner som kildedata - kildedata må du få fra tilbyders API. Faren med å bruke innholdet i notifikasjoner som kildedata er at du kan ende opp med utdaterte data - for eksempel hvis konsument ikke har hentet ut nye notifikasjoner fra sin meldingskø på en dag. API og notifikasjoner bør vere i synk, dvs. snakke om de samme entitetene. Gjøres dette ulikt blir det fort komplisert hos alle konsumenter som må tolke og oversette. API-et bør tilby data konsistent. Hvis en entitet finnes, bør det eksponeres i API-et uavhengig av tidspunktet spørringen skjer på. Hvis data for eksempel blir begrenset før et tidspunkt, og etter en viss tid, er det stor fare for at tilbyder utfører en forretningslogikk som bør ligge hos konsumentene. Plutselig dukker det opp en konsument med behov for data på et enda senere tidspunkt, som da plutselig ikke blir mulig. "},{"title":"Se også​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"docs/datadeling/god-praksis/notifikasjonsdesign/#se-også","content":"Integrasjonsmønsteret hendelsesbasert provisjonering, som bruker notifikasjoner. Selvbetjening for RabbitMQ, som er der du administrerer hvem som har tilgang til hvilke notifikasjoner. "},{"title":"Prosessene fra fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"docs/datadeling/hva-er/prosessene/","content":"","keywords":""},{"title":"Operative prosesser​","type":1,"pageTitle":"Prosessene fra fellestjenesten for Datadeling","url":"docs/datadeling/hva-er/prosessene/#operative-prosesser","content":"For å bruke fellestjenesten har du prosessene: Registrere og publisere APISøke etter APISøke om tilgang til APIGodkjenne og avslå tilgang til APIKoble til et API Disse prosessene bør plasseres i organisasjonen. Se veilederene for hvordan du gjennomfører prosessene i praksis. "},{"title":"Andre prosesser​","type":1,"pageTitle":"Prosessene fra fellestjenesten for Datadeling","url":"docs/datadeling/hva-er/prosessene/#andre-prosesser","content":"Fellestjenesten anbefaler at institusjonene også innfører prosessene: Informasjonforvaltning, spesielt sikre god datakvalitet. Se orden i eget hus.Implementere, designe og forvalte APIBeslutnings- og eskaleringsprosesser rundt integrasjonsutvikling, inkludert unntakshåndteringJustere institusjonens arkitektur etter nasjonale føringer og anbefalingene fra fellestjenesten "},{"title":"Rollene i fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"docs/datadeling/hva-er/roller/","content":"","keywords":""},{"title":"Mottaksansvarlig og datadelingskoordinator​","type":1,"pageTitle":"Rollene i fellestjenesten for Datadeling","url":"docs/datadeling/hva-er/roller/#mottaksansvarlig-og-datadelingskoordinator","content":"Hver institusjon som innfører fellestjenesten bør ha sin lokale koordinator som tar seg av dialogen med Sikt. Under innføringen av IntArk er det denne personen Sikt forholder seg til. Den mottaksansvarlige må sikre at institusjonen innfører fellestjenesten på en hensiktsmessig måte, blant annet ved: Kjenne til anbefalingene fra fellestjenesten.Relevante interessenter blir holdt informert (blant annet dataforvaltere, tjenesteeiere, utviklere og anskaffere).Intern dokumentasjon blir oppdatert.Se til at datatilbydere og konsumenter får tilganger i den tekniske plattformen.Holde Sikt oppdatert på innføringen av IntArk.Koordinere opplæringstilbudet fra Sikt internt hos institusjonen.Melde tilbake til Sikt om mangler og behov. Etter innføringen bør institusjonen også ha en koordinator som kjenner til fellestjenesten, da dette kan gjøre videre forvaltning enklere. "},{"title":"Datatilbyder​","type":1,"pageTitle":"Rollene i fellestjenesten for Datadeling","url":"docs/datadeling/hva-er/roller/#datatilbyder","content":"En datatilbyder er en person, tjeneste eller enhet som har ansvar for data som er brukbare for andre - dvs. kildedata. Referansearkitekturen deler denne rollen opp i tre roller: tjenesteeier, tjenesteansvarlig og datforvalter, men i fellestjenesten forholder vi oss primært bare til alt som datatilbyderen. Institusjonen er likevel anbefalt å følge rolledefinisjonen fra referansearkitekturen. I fellestjenesten er datatilbyderens primære ansvar at dataene blir gjort tilgjengelige, uavhengig av hvem som er konsument. Datatilbyder må også følgestyringsreglene, og bør også se på anbefalingene rundt effektiv datadeling. I den tekniske plattformen skal datatilbydere publisere sine API, og registrere sin publisering av notifikasjoner. "},{"title":"Konsument​","type":1,"pageTitle":"Rollene i fellestjenesten for Datadeling","url":"docs/datadeling/hva-er/roller/#konsument","content":"En person, enhet eller tjeneste som trenger å hente data fra et kildesystem. Husk at du kan både være datatilbyder og konsument - dette avhenger av hvilke data du ser på. I fellestjenesten er konsumenten pliktig å hente data direkte fra kildesystemet, og å rapportere om feil i data til datatilbyder. Konsumenten må også selv håndtere systemspesifikke tilpasninger av dataene. I den tekniske plattformen må konsumenter registrere sin tjeneste for å kunne søke om tilgang til datatilbydere sine API, og kunne abonnere på deres notifikasjoner. "},{"title":"Dataforvalter​","type":1,"pageTitle":"Rollene i fellestjenesten for Datadeling","url":"docs/datadeling/hva-er/roller/#dataforvalter","content":"Dataforvalter er den enhet/person som har ansvaret for å administrere dataene hos en datatilbyder. Vi anbefaler at dette ansvaret plasseres, men det er opp til institusjonen om dette plasseres som en egen roller, eller sammen med for eksempel datatilbyder, tjenesteeier eller tjenesteansvarlig. Dataforvalter er ansvarlig for datakvaliteten, dvs: At data er kompletteAt data er maskinlesbareAt data er riktig formaterte "},{"title":"Se også​","type":1,"pageTitle":"Rollene i fellestjenesten for Datadeling","url":"docs/datadeling/hva-er/roller/#se-også","content":"BegrepsbrukRollene i referansearkitekturenStyringsreglene til fellestjenesten "},{"title":"IntArk for dataeiere","type":0,"sectionRef":"#","url":"docs/datadeling/malgrupper/dataeier/","content":"","keywords":""},{"title":"Hva trenger jeg å vite?​","type":1,"pageTitle":"IntArk for dataeiere","url":"docs/datadeling/malgrupper/dataeier/#hva-trenger-jeg-å-vite","content":"Som ansvarlig for data som andre kan ha bruk for, har du plikt til å dele dette i et API. Les Hva er IntArkSe oversikten over roller og plikter i IntArk som er relevant for deg. Du som dataeier har rollen &quot;Tilbyder&quot;. "},{"title":"Hvordan komme i gang?​","type":1,"pageTitle":"IntArk for dataeiere","url":"docs/datadeling/malgrupper/dataeier/#hvordan-komme-i-gang","content":"Det viktigste er at du er kjent med din rolle i IntArk, spesielt hva som er ditt ansvar som dataeier. Er dine data tilgjengeliggjort i et API, med et åpent grensesnitt? Se anbefalinger om bruk av Web ServiceSe veileder for anskaffelse av IT-tjenester Er API-et for dine data registrert i institusjonens API manager? Se veileder for å registrere ditt APISe veileder for å gi eller avslå søknader om tilgang til ditt API Har du kontroll på datakvaliteten, og rutiner for å vedlikeholde disse? Se anbefalinger rundt god datakvalitetSe også veilederen Orden i eget hus "},{"title":"IntArk for anskaffere/innkjøpere","type":0,"sectionRef":"#","url":"docs/datadeling/malgrupper/anskaffer/","content":"","keywords":""},{"title":"Hva trenger jeg å vite?​","type":1,"pageTitle":"IntArk for anskaffere/innkjøpere","url":"docs/datadeling/malgrupper/anskaffer/#hva-trenger-jeg-å-vite","content":"Hvis du skal kjøpe inn digitale løsninger, vil de mest sannsynlig måtte integrere med andre løsninger, nå eller i fremtiden. Det er derfor viktig å vite hvilke krav IntArk setter til integrasjoner, for å kunne vektlegge dette i innkjøpet. Som anskaffer trenger du: Les Hva er IntArk.Les veileder for anskaffelser.Sjekkliste for om en IT-tjeneste er IntArk-kompatibel [TODO lag og lenk] "},{"title":"IntArk for leverandører","type":0,"sectionRef":"#","url":"docs/datadeling/malgrupper/leverandor/","content":"","keywords":""},{"title":"Hva trenger jeg å vite?​","type":1,"pageTitle":"IntArk for leverandører","url":"docs/datadeling/malgrupper/leverandor/#hva-trenger-jeg-å-vite","content":"IntArk setter føringer for hvordan systemer og tjenester skal integreres i UH-sektoren. Dette påvirker også anskaffelser av systemer og tjenester for UH-sektoren. Se Hva er IntArk for en kort innføring. Se også veileder for anskaffere, som gir deg sektorens forventinger til et systems evne til datadeling. "},{"title":"IntArk for sluttbrukere","type":0,"sectionRef":"#","url":"docs/datadeling/malgrupper/sluttbruker/","content":"","keywords":""},{"title":"Mine data​","type":1,"pageTitle":"IntArk for sluttbrukere","url":"docs/datadeling/malgrupper/sluttbruker/#mine-data","content":"IntArk er bare et verktøy for å gjøre datadeling ryddigere, for eksempel ved å enklere gi oversikt over hvilke data som er hvor. Ingenting er endret, det er fremdeles dine data, men med IntArk er det enklere å finne frem. Du kan selv se din institusjons API-katalog. Du vil ikke nødvendigvis kunne selv få tilgang til alle dine personopplysninger direkte via alle API, men du kan spørre. "},{"title":"Mine integrasjoner​","type":1,"pageTitle":"IntArk for sluttbrukere","url":"docs/datadeling/malgrupper/sluttbruker/#mine-integrasjoner","content":"Du kan søke om tilgang til de forskjellige API-ene hos din institusjon. Noe kan du få tilgang til som sluttbruker, mens annet kan du få tilgang til om du for eksempel er forsker eller student. Dette vurderes utfra hvilke data du ber om tilgang til. Merk at bruk av enkelte data vil påføre deg et ansvar, for eksempel bruk av personopplysninger. Dette må avtales for hver enkelt tilgang. Se veileder for å søke om tilgang til et APIFor mer informasjon, se introduksjon til hva IntArk er for noe, inkludert en kort video. "},{"title":"IntArk for institusjonsansvarlige","type":0,"sectionRef":"#","url":"docs/datadeling/malgrupper/institusjonsansvarlig/","content":"","keywords":""},{"title":"Hva trenger jeg å vite?​","type":1,"pageTitle":"IntArk for institusjonsansvarlige","url":"docs/datadeling/malgrupper/institusjonsansvarlig/#hva-trenger-jeg-å-vite","content":"Som ansvarlig for en institusjon er du også ansvarlig for at IntArk sine føringer følges. Relevant informasjon: Hva er IntArkKonsekvenser for organisasjonenRollene i IntArkStyringsreglene til IntArk "},{"title":"Hvordan kommer jeg i gang med IntArk?​","type":1,"pageTitle":"IntArk for institusjonsansvarlige","url":"docs/datadeling/malgrupper/institusjonsansvarlig/#hvordan-kommer-jeg-i-gang-med-intark","content":"Følg veilederen for innføring av IntArk. "},{"title":"IntArk for utviklere","type":0,"sectionRef":"#","url":"docs/datadeling/malgrupper/utvikler/","content":"","keywords":""},{"title":"For utviklere som er ferske i IntArk​","type":1,"pageTitle":"IntArk for utviklere","url":"docs/datadeling/malgrupper/utvikler/#for-utviklere-som-er-ferske-i-intark","content":"Hva er IntArk i praksis, for utviklereIntroduksjon til anbefalte integrasjonsmønstreEksempler på kode og eksisterende IntArk-kompatible tjenester "},{"title":"Oppslag​","type":1,"pageTitle":"IntArk for utviklere","url":"docs/datadeling/malgrupper/utvikler/#oppslag","content":"Oversikt over tekniske komponenteneAPI manager: OversiktMeldingskø: Tekniske detaljerBegrepsbrukAlle veiledere "},{"title":"Tilbyder​","type":1,"pageTitle":"IntArk for utviklere","url":"docs/datadeling/malgrupper/utvikler/#tilbyder","content":"For deg som utvikler systemer som andre kan hente kildedata fra: Hvilke integrasjonsmønstre som anbefales i IntArkHvordan utforme ditt APIHvordan utforme og sende notifikasjonerHvordan registrere ditt API i API manager Krav om Feide, via OIDC?Kva med system-til-system-integrasjoner?Hvor bør API legges Veileder for å se bruken av ditt API, for innsikt og statistikk over bruk, for eksempel hvem som bruker API-et ditt mest? "},{"title":"Konsument​","type":1,"pageTitle":"IntArk for utviklere","url":"docs/datadeling/malgrupper/utvikler/#konsument","content":"For deg som utvikler IT-tjenester som skal hente data fra datatilbydere. Hvordan finne frem til riktige data: Gå til API-katalogen hos din instans, og søk etter API Hvordan søke om tilgang (veileder)Hvordan forholde deg til IntArks bruk av notifikasjoner (se også begrepsoversikten) "},{"title":"Bakgrunnen for Fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"docs/datadeling/om/bakgrunn/","content":"","keywords":""},{"title":"IT-arkitekturprinsipper for offentlig sektor - 2009​","type":1,"pageTitle":"Bakgrunnen for Fellestjenesten for Datadeling","url":"docs/datadeling/om/bakgrunn/#it-arkitekturprinsipper-for-offentlig-sektor---2009","content":"IntArk ble bygget utfra de felles arkitekturprinsippene for offentlig sektor som ble lagt frem som en del av St. meld nr. 19 (2008-2009) - Ei forvaltning for demokrati og fellesskap. Her besluttet regjeringen syv overordnede prinsipper som skal fungere som et sett med felles retningslinjer for alt arbeid med IT i offentlig sektor: TjenesteorienteringInteroperabilitetTilgjengelighetSikkerhetÅpenhetFleksibilitetSkalerbarhet Se også Beskrivelse av prinsippene og hvordan de skal forstås [PDF] Etter dette har DigDir kommet med nye, mer overordnede arkitekturprinsipper. "},{"title":"UiO:IntArk - 2010-2019​","type":1,"pageTitle":"Bakgrunnen for Fellestjenesten for Datadeling","url":"docs/datadeling/om/bakgrunn/#uiointark---2010-2019","content":"Universitetet i Oslo fikk i 2010 utarbeidet en ny strategi, og så på nødvendige endringer for å nå denne strategien. En av punktene som ble kartlagt var behovet for en ny arkitektur og integrasjonsrammeverk. Strategien så fordelene med en heterogen og distribuert organisering, der beslutninger tas mest mulig lokalt. Arkitekturen måtte støtte opp rundt dette, og demme opp for ulempene med denne organiseringen. IT-siden så fort behovet for at det måtte være enklere å dele data på en desentralisert måte. Flere arbeidsgrupper og prosjekter ble startet, og en ny integrasjonsarkitektur ble mer og mer konkretisert og spisset. Denne arkitekturen fikk etterhvert navnet &quot;UiO:IntArk&quot;. Integrasjonsarkitekturen inneholdt mange elementer, fra organisatoriske funksjoner til tekniske verktøy, og fra overordnede prinsipper til mer konkrete retningslinjer. Noen av elementene: Generelle prinsipper som alle parter på UiO måtte forholde seg til. Disse reglene var overordnede og mest mulig uavhengig av dagens teknologi, og var eid av en strategisk koordineringsgruppe som involverte personer fra alle fakultetene. Noen av prinsippene var brukerorientert, tjenesteorientert, og lokal fleksibilitet (etter kost-nytte-vurdering). En definert prosess for eskalering av prioriteringer og beslutninger rundt datadeling. Prosessen gikk fra systemeier, til et sentralt prioriteringsråd, til en sentral strategisk koordineringsgruppe. Sentralt i prioriteringene var en kost-nytte-vurdering, med fokus på gevinstene for universitetet som helhet. Tekniske verktøy for å hjelpe UiO med å oppfylle gevinstene med integrasjonsarkitekturen - Gravitee og RabbitMQ. Produktene ble valgt fordi de løste behovene i arkitekturen best mulig - spesielt prinsippet om å unngå lock in var vesentlig. Det var også noen av få produkter på markedet som støttet en desentralisert organisering av API og konsumenter. Hva som fantes i bransjen av løsninger satte også begrensninger i hva som var mulig å innføre i integrasjonsarkitekturen - det fantes for eksempel ikke gode løsninger for en desentralisert håndtering av gateways, eller utbredte protokoller som unngikk at all dataflyt må gå gjennom en gateway. IntArk på UiO fokuserte på hvor forbedringspotensialet var størst og mest konkretisert, som var system-til-system-integrasjoner for administrativ IT. "},{"title":"Uninett sin Dataporten​","type":1,"pageTitle":"Bakgrunnen for Fellestjenesten for Datadeling","url":"docs/datadeling/om/bakgrunn/#uninett-sin-dataporten","content":"Uninett utviklet en ny tjeneste, kalt Dataporten, for å støtte nye tekniske muligheter som kom med OpenID Connect (OIDC). Dette ga mulighet for å en mye enklere og mer standardisert datadeling. Dataporten ble etterhvert en integrert del av Feide. Det var noe overlapp av funksjonalitet mellom IntArk og Dataporten, men med ulikt fokus. Dataporten fokuserte på det mer tekniske og praktiske rundt OIDC, spesielt på integrasjoner mellom tjeneste og sluttbruker. UiO:IntArk fokuserte mest på de interne behovene til institusjonen, og system-til-system-integrasjoner. "},{"title":"Prosjekt Unit Datadeling - 2020-2022​","type":1,"pageTitle":"Bakgrunnen for Fellestjenesten for Datadeling","url":"docs/datadeling/om/bakgrunn/#prosjekt-unit-datadeling---2020-2022","content":"Prosjekt Unit Datadelingble startet i 2020, med Unit som prosjekteier. Her ble IntArk, HKdirs og Uninetts erfaringer tatt med i opprettelsen av en ny fellestjeneste for Datadeling. Fellestjenesten var en videreføring av noen elementer fra UiO sin integrasjonsarkitektur, men med nye, mer overordnede elementer fra HKdir. Et resultat fra prosjektet var referansearkitekturen for deling av data i høyere utdanning og forskning. I 2021 ble fellestjenesten for datadeling besluttet innført for sektoren. Den tekniske plattformen ble rullet ut til alle institusjoner i sektoren i 2022. Prosjektet hadde også anbefalinger for en neste generasjon av en teknisk plattform, som blant annet så på en mer sentralisert styring av data fra større leverandører, men også en mer desentralisert håndtering av API gateways. "},{"title":"Hva er Fellestjenesten for Datadeling (IntArk)?","type":0,"sectionRef":"#","url":"docs/datadeling/om/","content":"","keywords":""},{"title":"Fellestjeneste for Datadeling​","type":1,"pageTitle":"Hva er Fellestjenesten for Datadeling (IntArk)?","url":"docs/datadeling/om/#fellestjeneste-for-datadeling","content":"Sikt leverer fellestjenesten for Datadeling. Fellestjenesten inkluderer: Hva\tInneholderFøringer for hvordan dele likt\tReferansearkitektur og styringsregler Hjelp til å dele\tSupport, rådgivning og anbefalinger Verktøy for å dele\tTeknisk plattform "},{"title":"Hvorfor Fellestjeneste for Datadeling?​","type":1,"pageTitle":"Hva er Fellestjenesten for Datadeling (IntArk)?","url":"docs/datadeling/om/#hvorfor-fellestjeneste-for-datadeling","content":"Digitaliseringen krever mer datadeling og flere integrasjoner. En felles integrasjonsarkitektur i universitets- og høgskolesektoren gjør det enklere og mer effektivt å dele data, både internt hos en institusjon, mellom institusjoner og med resten av verden. Fellestjenesten fokuserer på det som gir mest verdi for UH-sektoren som helhet. Løsninger skal kunne samhandle, uavhengig av leverandør og lokasjon. Prinsippene bidrar til at sektoren henger med i utviklingen og kan tilby tidsriktige løsninger av høy kvalitet. Noen gevinster med bruk av fellestjenesten: Enklere å samarbeide med andre om datadeling, både internt hos hver institusjon og mellom institusjonene. Enklere å finne og ta i bruk data fra andre tjenester. Enklere å bytte ut tjenester, siden de er løsere koblet. Bruk av anbefalte integrasjonsmønstre gir raskere oppdaterte tjenester, som gjør de mer brukervenlige. "},{"title":"Føringer​","type":1,"pageTitle":"Hva er Fellestjenesten for Datadeling (IntArk)?","url":"docs/datadeling/om/#føringer","content":"Fellestjenesten forholder seg til føringer fra: Digitaliseringsstrategien for offentlig sektor 2019-2025Digitaliseringsdirektoratets overordnede arkitekturprinsipperDigitaliseringsdirektoratets rammeverk for digital samhandlingDigitaliseringsdirektoratets rammeverk for informasjonsforvaltning "},{"title":"Se også​","type":1,"pageTitle":"Hva er Fellestjenesten for Datadeling (IntArk)?","url":"docs/datadeling/om/#se-også","content":"Begrepsoversikten "},{"title":"Komponentene i fellestjenesten for datadeling","type":0,"sectionRef":"#","url":"docs/datadeling/om/komponenter/","content":"","keywords":""},{"title":"Sentral oversikt over data - API-katalog​","type":1,"pageTitle":"Komponentene i fellestjenesten for datadeling","url":"docs/datadeling/om/komponenter/#sentral-oversikt-over-data---api-katalog","content":"Institusjonen trenger oversikt over sine API og data, og trenger derfor en API-katalog. Denne skal både hjelpe institusjonen å ha kontroll og oversikt over sine data, men skal også hjelpe konsumenter med å finne frem til data. En API-katalog må blant annet støtte: Datatilbyder kan registrere sitt API i en sentral katalogDatatilbyder kan beskrive sitt API og sine data i en sentral katalogAt konsumenter kan selv lete etter relevante API Å sentralisere forvaltningen av API-er gir noen fordeler: Ett sted å forvalte bestilling av flere tilganger i flere API-er kun ett stedforvaltning av tilganger i flere kilder kun ett sted Sentral oversikt over dataflyt bedre sikkerhetoversikt over hele virksomheten Ett punkt for integrasjon konsumenter må ikke lete etter ulike API-erkonsumenter kan integrere en gang, ulike kilder gir tilgang "},{"title":"Sentral kontroll på datadeling - API manager​","type":1,"pageTitle":"Komponentene i fellestjenesten for datadeling","url":"docs/datadeling/om/komponenter/#sentral-kontroll-på-datadeling---api-manager","content":"Institusjonen må ha kontroll på hvem som har tilgang til hvilke data. Dette gjelder spesielt data med personopplysninger. For å oppfylle dette kravet, har vi behov for en tjeneste der du kan forvalte hvem som har tilganger til dine data. Konsumenter vil også kunne forvalte sine tilganger her. API manager må støtte: Sentral oversikt over hvem som har tilgang til hvilke API og dataKonsument kan selv søke om tilgang til data fra et APIDatatilbyder kan godkjenne/avslå søknad om tilgang til sine dataDatatilbyder har oversikt over hvem som har tilgang til sine dataDatatilbyder kan trekke tilbake tilgang til sine dataDatatilbyder kan styre hvilke deler av sitt API konsumenter får tilgang til "},{"title":"Kontroll over data - API gateway​","type":1,"pageTitle":"Komponentene i fellestjenesten for datadeling","url":"docs/datadeling/om/komponenter/#kontroll-over-data---api-gateway","content":"Tjenester som tilbyr data må være sikre på at bare autoriserte konsumenter får tilgang til dataene. Dette kan oppfylles av en API gateway, som står mellom datatilbyders API og konsumenten, og som utfører autentisering og tilgangskontroll. Du kan se på en API gateway som en smart proxy. API gateway må støtte: Konsumenter må autentiseres. Konsumenters forespørsler må tilgangskontrolleres opp mot hva de er blitt autorisert for i API manager. Datatilbyder må få oversikt over hvem som har hentet ut hvilke data. "},{"title":"Meldingskø​","type":1,"pageTitle":"Komponentene i fellestjenesten for datadeling","url":"docs/datadeling/om/komponenter/#meldingskø","content":"Sluttbrukerne har en forventning om at tjenester er oppdaterte med relevante data, og at en ikke trenger å for eksempel &quot;vente til neste morgen&quot; før endringer er trådd i kraft. Dette gir behov for en mer effektiv overføring av kildedata til konsumenter - fellestjenesten anbefaler integrasjonsmønsteret &quot;hendelsesbasert provisjonering&quot; for å dekke dette behovet. Dette krever bruk av en meldingskø. Produsenten skal ikke trenger å forholde seg til hvilke konsumenter som abonnerer på meldingene. Dette tar meldingskøen seg av. For å gjøre hendelsesbasert provisjonering enklere, må IntArk tilby en sentralisert meldingskø som datatilbydere kan publisere til, og konsumenter abonnere på meldinger fra. Meldingskøen må oppfyller behovene: Datatilbydere kan registere sin tjeneste som produsent av notifikasjoner.Datatilbydere kan sende notifikasjoner - tynne meldinger - til meldingskøen.Konsumenter kan abonnere og lytte på meldinger fra de produsentene de ønsker.Konsumenter må selv kunne lete etter relevante tjenester med meldingerKonsumenter må selv kunne søke om tilgang til meldinger fra en tjenesteDatatilbydere må kunne godkjenne/avslå søknad om tilgang til sine meldinger fra konsumenter. Meldingskøen er primært ment for integrasjoner som følger fellestjenestens anbefalte integrasjonsmønstre. Fellestjenesten legger ikke føringer på hva institusjonen gjør med eventuelt andre meldingskøer. Institusjonene kan likevel også bruke fellestjenestens meldingskøer for andre formål. "},{"title":"Styringsmodellen til UiO:IntArk","type":0,"sectionRef":"#","url":"docs/datadeling/om/styringsmodellen/","content":"","keywords":""},{"title":"Formålet med styringsmodellen​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"docs/datadeling/om/styringsmodellen/#formålet-med-styringsmodellen","content":"Arkitekturen skal gjøre integrasjonsarbeidet ryddigere og enklere å forholde seg til, med tydelige ansvarslinjer, samtidig som at rammeverket skal være fleksibelt å bruke. Det er viktig å se forholdet mellom IT-løsning og organisasjon, og IT-løsning og menneskene som skal benytte løsningen. Rammeverket skal gi produsenter og konsumenter autonomitet og selvstyre, men sette føringer der det er hensiktsmessig for institusjonen som helhet. Du kan sammenligne det med trafikkreglene: Du er for eksempel pålagt å kjøre på riktig side av veien, slik at alle kan komme seg trygt og effektivt til sitt mål, men ellers står du fritt til å kjøre hvor du vil og velge den bilen som passer deg. Et av UiO:IntArks prinsipper er kost/nytte. Kost/nytte skal vurderes for hele virksomhetens systemlandskap under ett med et langsiktig perspektiv. Integrasjonsarbeidet ved UiO skal med andre ord gi en helhetlig verdi for virksomheten, der prioriteringsrådets oppgave er å og anbefale rekkefølge og bemidling der det er interesse- eller ressurskonflikter. Dette er tatt med i styringsmodellen. "},{"title":"Styringsmodellen​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"docs/datadeling/om/styringsmodellen/#styringsmodellen","content":"Modellen er en kombinasjon av: Internettmodellen, der alle bestemmer for seg selv i et nettverk. Alt ansvar plasseres lokalt, og du snakker med den du selv vil i nettverket. Nærhetsmodellen, som er en desentral modell som plasserer ansvar og myndighet både sentralt og lokalt nivå i en organisasjon. Modellen brukes for beslutningslinjene på Universitetet i Oslo. En illustrasjon av modellen:  Hver aktør er autonom, og bestemmer selv hvem de skal kommunisere med. Kommunikasjonen går direkte, og ikke via tredjepart eller en sentral aktør. Der det er hensiktsmessig for organisasjonen som helhet, dvs. der det er stordriftsfordeler, lages det sentraliserte fellesløsninger. Sentraliserte løsninger er i utgangspunktet valgfrie for alle aktørene å bruke. "},{"title":"Bakgrunn for styringsmodellen​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"docs/datadeling/om/styringsmodellen/#bakgrunn-for-styringsmodellen","content":"Modellen for UiO:IntArk ble laget for å fungere i heterogene organisasjoner, der beslutninger tas mest mulig lokalt (distribuert). Mange universiteter og høgskoler er organisert på denne måten, for eksempel i hva fakultetene selv bestemmer. Modellen bestemmer både hvordan beslutninger og ansvar plasseres, og hvordan tekniske komponenter spiller sammen. Modellen prøver også si noe om samspillet mellom IT og virksomhet. Alt dette må fungere sammen. I utarbeidingen av UiO:IntArk var et viktig poeng at det er mennesker som skal bruke arkitekturen. Det ble gjennomført workshops med systemeiere og utviklere der de viktigste og mest samstemte tilbakemeldingene fra samlingene var at forutsigbarhet, handlingsrom og autonomi var sterkt ønsket. De ville også ha ett kontaktpunkt man kunne henvende seg til for å få veiledning og hjelp. Menneskets produktivitet motiveres av autonomi, følelsen av tilhørighet og at man har rett kompetanse.1 Organisatorisk springer arbeidet med integrasjonsarkitektur ut av, og er forankret i, Universitetsstyrets vedtak om “Organisering og standardisering av universitetets IT-virksomhet”: “Universitetsdirektøren skal i samarbeid med ledelsen ved fakulteter og institutter utarbeide forslag til arkitektur og integrasjonsrammeverk.” "},{"title":"Horisontal og vertikal koordinering​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"docs/datadeling/om/styringsmodellen/#horisontal-og-vertikal-koordinering","content":"For å ivareta helheten i tjenestelandskapet, samtidig med å tilby systemeiere et handlingsrom, ble det laget prinsipper og anbefalinger. Ved å følge anbefalingene kan to fakultet lage hver sine IT-løsninger uten å snakke sammen, men løsningene deres kan fortsatt utveksle informasjon. De er interoperatible. Vi kaller dette horisontal koordinering. Dette i kontrast til vertikal koordinering, som omhandler eskalering og beslutningskjeder. For UiO:IntArk ble det besluttet at eskalering og beslutningskjeden er: Systemeier -&gt; Prioriteringsråd -&gt; Strategisk koordineringsråd Beslutningskjeden ble først innført for administrative IT-tjenester, og ikke IT i forskning og IT i utdannning. Prioriteringsrådets oppgave er å ta forretningsbeslutninger rundt integrasjon. Det har en proaktiv rolle med tanke på hva som kommer av oppdrag samt organisasjonens endringskapasitet og gjennomføringsevne. Hvordan UiO gjør IT, ligger ennå til IT-Direktør iht. Universitetsdirektørens delegering. Systemeier løfter typisk en sak til prioriteringsråd hvis det reises uenighet. Hvis saken er utenfor mandat, eller det ikke oppnås en enighet, kan saken løftes til Strategisk koordineringsråd, som inneholder deltagere fra fakultetene og sentrale interessenter. Noen scenarier for beslutningskjeden: Scenario 1: Flere har behov for de samme ressursene. Behov må prioriteres opp mot hverandre og planlegges for å få komplekse integrasjoner på plass, eller det må vurderes å kjøpe ekstern arbeidskraft. Prioriteringsrådet kan anbefale prioritering av ressurs-søknader til SKAIT. Scenario 2: System-/dataeiere ønsker å integrere, men har ikke mulighet til å finansiere (hele) integrasjonen over egne budsjetter. Det må fremskaffes midler og behovet må vurderes i lys av andre integrasjonsbehov. Scenario 3: En systemeiere har tilbyr ikke sine data i tråd med integrasjonsarkitekturen, og uenighet med andre systemeiere medfører en eskalering. "},{"title":"Nærhetsmodellen​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"docs/datadeling/om/styringsmodellen/#nærhetsmodellen","content":"Det viktigste beslutningen og leveransen som kom ut av “Organisering og standardisering av universitetets IT-virksomhet” varNærhetsmodellen. Nærhetsmodellen var den sterkeste føringen for å tilpasse arkitekturen til organisasjonen. Nærhetsmodellen slår fast at: &quot;Organiseringen av de administrative tjenester skal følge en desentral modell som innebærer økt ansvar og myndighet på lokalt nivå.&quot; I UiO:IntArk bruker vi ordet &quot;distribuert&quot; i stedet for &quot;desentral&quot;. I all hovedsak betyr det det samme, med unntak av at en distribuert løsning består av komponenter som utveksler informasjon. En desentral løsning har ikke dette kravet. Illustrasjon for en distribuert løsning, som viser at alle aktører snakker direkte med hverandre:  Aktørene utgjør et nettverk av autonome enheter. "},{"title":"Internettmodellen – ansvarliggjøring av systemeier​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"docs/datadeling/om/styringsmodellen/#internettmodellen--ansvarliggjøring-av-systemeier","content":"Å ansvarliggjøre systemeier er også en føring integrasjonsarkitekturen har arvet fra føringer på høyere nivå, fra Organisering og styring av IT: Når det gjelder administrativ IT er det bestemt at denne skal fullfinansieres over systemeiernes budsjetter. Sammen med veikartene vil dette gi langt bedre oversikt over kostnadene knyttet til denne virksomheten og gi tilsvarende bedre grunnlag for styring og prioritering. Modellen med autonome aktører kalles ofte &quot;Internettmodellen&quot;, da det er slik internettet er bygget: Alle holder kontroll på seg selv. Det er ingen kontrollmekanismer (sentralt) i nettverket som godkjenner hvem som snakker med hvem. De vanlige fordelene med modellen: den er innovasjonsdrivendedet er kort vei til beslutningsmyndighet, beslutninger tas lokaltansvaret er tydeligeventuelle flaskehalser lager bare forsinkelser for de involverte, ikke for nettverket som sådan De vanlige ulempene: den er uoversiktlig, vanskelig å finne fremdet er ingen kontrollmekanismer i nettverket, svak etterrettelighetden fordrer redundant kompetansedet kan kreve høy kompetanse å sette sammen data fra flere kilder &quot;Internettmodellen&quot; ligger til grunn for UiOs integrasjonsarkitektur. I virkeligheten fungerer internettet på grunn av ekstrem standardisering, for eksempel rundt internettadresser, protokoller (som http) og språk (som html). På samme måte har integrasjonsarkitekturen standardisert på bransjestandard mekanismer og format. Dette gjør at man ikke lenger er avhengig av IT-spesialister fra en spesifikk leverandør for å integrere. Man kan gjøre det selv, eller kjøpe hjelp fra en valgfri tredjepart - dette styrer hver enkelt systemeier selv. Internettet byr også på sentraliserte komponenter, enten de er per design (som DNS/SSL) eller de facto (som søketjenesten Google). Dette gir brukervennlighet, oversikt og sikkerhet. UiOs integrasjonsarkitektur har derfor også sentraliserte tjenester som tilbyr nettopp dette. Vi har standardisert rundt noen felles komponenter for at informasjonsutveksling skal skje brukervennlig, effektivt og for å bedre kontroll og etterrettelighet, herunder oppfylle lovgivning og forskrifter. API-katalogen er et eksempel på en komponent som skal gjøre det enklere for både produsenter og konsumenter. "},{"title":"Telefonsentralmodellen​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"docs/datadeling/om/styringsmodellen/#telefonsentralmodellen","content":"Den diamentrale arketypen til Internettmodellen kalles gjerneTelefonsentralmodellen. I denne modellen går all trafikk gjennom en sentral før den når mottager, slik illustrasjonen viser:  I UiO:IntArk går vi bort fra denne modellen, både fordi den ikke passer med UiOs desentraliserte styringsmodell, og fordi sentralen blir en flaskehals for endringsdyktighet. Tidligere måtte man kontakte en gruppe spesialister og data ble fraktet gjennom store komponenter som FS, SAP, OA og IGA (Cerebrum). Kompleksiteten i disse sentralene gjorde det vanskelig og dyrt å hente hjelp fra tredjepart. Gruppene sto ofte selv for å prioritere oppdrag og diktere løsninger. Dette var en modell som passet bedre da IT kun var for de innvidde og ikke skjedde overalt i organisasjonen. Modellen har også gode sider. Sentralen tilbyr funksjonalitet som hjelper aktørene i nettverket. For eksempel kan den, ut fra hvilken informasjon som sendes, vite hvilken aktør som skal ha pakken, eller den kan sette sammen data fra forskjellige aktører før den sender den samlede informasjonen til mottager på det foretrukne formatet. Modellens kjerneegenskaper er: innovasjon skjer i sentralen, innovasjonshemmende på enkeltaktørerkompleksitet flyttes fra aktør til sentral, krever mindre redundant spesialkompetansefordrer mer ressurser sentralt i nettverketgir kontroll og etterrettelighetkan ved ressursmangel fungere som en flaskehals for hele nettverketeffektive beslutninger fordrer tydelig mandat og delegasjon Nærhetsmodellen tilsier at denne modellen skal benyttes under gitte omstendigheter: &quot;Ved stordriftsfordeler, eller der oppgavene krever særlig kompetanse, skal det velges sentraliserte løsninger.&quot; Det burde kanskje vært tilføyd: Når behovene er statiske og endres sjelden. "},{"title":"Gode kombinasjonsmodeller​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"docs/datadeling/om/styringsmodellen/#gode-kombinasjonsmodeller","content":"Til tross for modellene er diamentralt motsatte, kan de to metodene med hell benyttes i kombinasjon: De er to forskjellige verktøy, som kniv og gaffel. Teknisk og administrativt kan altså UiOs integrasjonsarkitektur illustreres slik:  Illustrasjonen viser at aktørene er autonome, men at der det er stordriftsfordeler (som mye brukte data) eller kreves spesialkompetanse (som kompliserte uttrekk satt sammen fra flere datakilder) kan man lage sentraliserte løsninger. Tegningen viser arkitekturen suppleres med støttetjenester. Eksempler på støttetjenestene: Felles tjenesteregister, som viser hvilke data som tilbys og hvor de er å finne. En API-katalog er et subsett av dette. Sikker Datadeling, for sikker datautveksling mellom IT-tjenester. Også kaltAPI gateway. Meldingskø-håndtering, hvilket er en tjeneste for umiddelbar datasynkronisering mellom tjenester som støtter og trenger det. Det vil si tjenester som benytter seg av å selv å lagre replikerte data om rom, brukere, grupper eller annet, såkalt provisjonering. Felles kontaktpunkt. Dette har primært til hensikt å måle resultatene av arkitekturen. Dette for å kunne lære og videreutvikle arkitekturen. For å kunne gjøre denne læringen, må kontaktpunktet vite hvem som har integrert hvordan, og erfaringen de har trukket av dette. Kontaktpunktet kan også ta seg av andre henvendelser, som fra de som ønsker støtte til å integrere eller til å lage et godt design Sentraliserte uttrekk og kontrollmekanismer. Et eksempel kan være at mange konsumenter trenger tilgang til data sammensatt fra flere kilder, som da kan tilbys i en sentralisert tjeneste. Eskalering- og beslutningskjeden som går fra systemeier, gjennom prioriteringsrådet, til strategisk koordineringsråd. A general theory of human motivation applicable to leadership. Deci and Ryan (1989) Self-Determination Theory (SDT).↩ "},{"title":"IntArk sin tekniske plattform","type":0,"sectionRef":"#","url":"docs/datadeling/teknisk-plattform/","content":"","keywords":""},{"title":"API manager​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"docs/datadeling/teknisk-plattform/#api-manager","content":" "},{"title":"Administrasjon av dine API og tilganger​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"docs/datadeling/teknisk-plattform/#administrasjon-av-dine-api-og-tilganger","content":"Vi bruker Gravitee som API Manager, og hver institusjon får sin egen, isolerte Gravitee-instans. Mer detaljer om API manager: Hvordan vi bruker GraviteeTekniske detaljer Veiledere for API manager: Veileder for å komme i gang med IntArkVeileder for å registrere et APIVeileder for å søke om tilgang til API "},{"title":"API Gateway​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"docs/datadeling/teknisk-plattform/#api-gateway","content":" "},{"title":"Tilgangskontroll for dine API​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"docs/datadeling/teknisk-plattform/#tilgangskontroll-for-dine-api","content":"API gateway er en proxy for ditt API, som brukes for tilgangskontroll og logging. API gateway styres av API manager. Teknisk sett er dette to separate komponenter i samme produkt. Vi bruker Gravitee som API Gateway. Tilkoblingsdetaljer "},{"title":"Selvbetjeningsportal for RabbitMQ​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"docs/datadeling/teknisk-plattform/#selvbetjeningsportal-for-rabbitmq","content":" "},{"title":"Administrasjon av tilgang til dine meldinger​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"docs/datadeling/teknisk-plattform/#administrasjon-av-tilgang-til-dine-meldinger","content":"En enkel selvbetjening foran RabbitMQ, så datatilbydere og konsumenter kan selv forvalte sine tilganger til notifikasjoner. Mer detaljer om Selvbetjeningsportalen for RabbitMQVeileder for å registrere din tjeneste i selvbetjeningsportalen "},{"title":"Meldingskø​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"docs/datadeling/teknisk-plattform/#meldingskø","content":" "},{"title":"Håndtering av dine meldinger​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"docs/datadeling/teknisk-plattform/#håndtering-av-dine-meldinger","content":"RabbitMQ ser til at meldinger, spesieltnotifikasjoner, leveres mellom tjenester. Dette brukes blant annet i integrasjonsmønsteret hendelsesbasert provisjonering. Bruk helst Selvbetjeningsportalen for RabbitMQ for å administrere dine tjenester og tilganger. RabbitMQ krever mer teknisk innsikt å bruke, og i tillegg hjelper Selvbetjeningsportalen deg å sette opp meldingskøer på en standard måte. Tilkoblingsdetaljer "},{"title":"Konnektorer​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"docs/datadeling/teknisk-plattform/#konnektorer","content":"Jo flere som følger IntArk for sine integrasjoner, jo mer IntArk-kompatible konnektorer kan gjenbrukes av andre. Se kodeeksemplerog erfaringsdelingen. "},{"title":"Veiledere i IntArk","type":0,"sectionRef":"#","url":"docs/datadeling/veiledere/","content":"","keywords":""},{"title":"API manager​","type":1,"pageTitle":"Veiledere i IntArk","url":"docs/datadeling/veiledere/#api-manager","content":"Utvalg av veiledere for IntArks API manager, Gravitee. Få tilgang til et API.Hvordan du som konsument kan søke om tilgang til et API i Gravitee. Registrere et enkelt API.Veiledning for hvordan man registrerer et enkelt API i Gravitee. I tillegg til å registrere API må man opprette en eller flere planer. Forvaltning av tilganger til API. "},{"title":"Meldingskø​","type":1,"pageTitle":"Veiledere i IntArk","url":"docs/datadeling/veiledere/#meldingskø","content":"Utvalg av veiledere for IntArks meldingskø, RabbitMQ. Registrer din tjeneste for meldingsutsendingHvordan du registrerer din tjeneste i Selvbetjeningsportalen for RabbitMQ for meldingsutsending. "},{"title":"Andre veiledere​","type":1,"pageTitle":"Veiledere i IntArk","url":"docs/datadeling/veiledere/#andre-veiledere","content":"Anskaffelse av IT-tjenester "},{"title":"Veileder for anskaffelser av IT-tjenester","type":0,"sectionRef":"#","url":"docs/datadeling/veiledere/annet/anskaffelse/","content":"","keywords":""},{"title":"Hvorfor følge fellestjenesten sine anbefalinger?​","type":1,"pageTitle":"Veileder for anskaffelser av IT-tjenester","url":"docs/datadeling/veiledere/annet/anskaffelse/#hvorfor-følge-fellestjenesten-sine-anbefalinger","content":"Med fellestjenesten for Datadeling prøver vi å gjøre det enklere å dele data, men også heve kvaliteten på datadelingen. Et av fokusområdene er å gjøre integrasjoner endringsdyktige. IT-tjenester som kjøpes inn påvirker også institusjonens evne til å dele data. Ved å kjøpe inn en billig IT-tjenester som ikke kan dele sine data, mister du muligheter. Vil besparelsen ved å kjøpe en dyrere IT-tjeneste veie opp for mulighetene og gevinstene ved gjenbruk av dataene? Ved å kjøpe en IT-tjeneste som bare kan integreres med andre tjenester fra samme leverandør, låser du deg fort til å bruke leverandøren sine produkter - en såkalt lock in-situasjon. Dette går spesielt utover institusjonens endringsdyktighet - hva blir kostnaden av å innføre en ny tjeneste, når du ikke kan gjenbruke data, eller må samtidig bytte ut mange andre tjenester? Anskaffede IT-tjenester må også kunne integreres og samarbeide med andre IT-tjenester. Vi prøver hjelpe med dette. "},{"title":"Hva bør følges?​","type":1,"pageTitle":"Veileder for anskaffelser av IT-tjenester","url":"docs/datadeling/veiledere/annet/anskaffelse/#hva-bør-følges","content":"Alle IT-tjenester med data vil potensielt kunne være nyttig å integrere med. Anbefalingene fra fellestjenesten bør derfor vektlegges selv om IT-tjenesten ikke har behov for integrasjoner fra starten av. Integrasjonsprinsippene er overordnede føringer som ligger til grunn for fellestjenesten. Disse er nyttige å kjenne til, selv om de er mindre konkrete. Referansearkitekturen for deling av data i kunnskapssektoren er et målbilde for hvor vi ønsker at sektoren skal være om noen år. Styringsreglene for fellestjenesten er hva institusjonen må følge for å bruke fellestjenesten. Også anskaffede IT-tjenester må følge disse. En utfordring er at det er få konkrete krav, men elementer som bør med i helhetsvurderinger. For eksempel er et krav at IT-tjenesten må tilby data via et API med et åpent grensesnitt, men hvor godt er API-et? Anbefalte gode praksiser inneholder også anbefalinger som kan tas med. Krav og behov fra fellestjenesten bør vektlegges i anskaffelser likt med mye annet. Bare husk på kravet til sektoren om mer digitalisering, som igjen setter høyere krav til IT-tjenesters evne til datadeling. "},{"title":"Hvordan kommer jeg i gang som innkjøper?​","type":1,"pageTitle":"Veileder for anskaffelser av IT-tjenester","url":"docs/datadeling/veiledere/annet/anskaffelse/#hvordan-kommer-jeg-i-gang-som-innkjøper","content":"Se oversikt over vurderinger ved anskaffelse av IT-tjenester og -systemer som du kan ta med dei i din anskaffelse. Dette gir deg ikke konkrete svar, men betrakninger fra tidligere erfaringer. Se også hjelpespørsmål ved anskaffelser som kan hjelpe deg i anskaffelsen, både i utlysninger og i evalueringer. "},{"title":"Mer informasjon​","type":1,"pageTitle":"Veileder for anskaffelser av IT-tjenester","url":"docs/datadeling/veiledere/annet/anskaffelse/#mer-informasjon","content":"Hva er Fellestjenesten for Datadeling (IntArk)?Veileder for orden i eget hus (digir.no) "},{"title":"Hostmaster","type":0,"sectionRef":"#","url":"docs/hostmaster/","content":"Hostmaster Nictool - Selvbetjening for redigering av DNS-data","keywords":""},{"title":"Sentralisert redigering og publisering av DNS-data","type":0,"sectionRef":"#","url":"docs/hostmaster/nictool/","content":"","keywords":""},{"title":"Innledning​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"docs/hostmaster/nictool/#innledning","content":"Som en tilleggstjeneste tilhostmaster-tjenestentilbyr Sikt også en sentralisert løsning for redigering av DNS-data via et web-grensesnitt. Grensesnittet er basert på Nictool, med noen få lokale tilpasninger. De registrerte dataene blir periodisk eksportert og publisert via en lokal navnetjener som kjører på samme maskin som web-frontenden. Denne vil opptre som såkalt skjult master for de publiserende navnetjenerne. Endrede data vil derfra pushes ut til de publiserende navnetjenerene. DNS-programvaren som benyttes til publisering er BIND.  "},{"title":"Hvordan komme i gang​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"docs/hostmaster/nictool/#hvordan-komme-i-gang","content":"De som har fått hjelp av Sikt til å gjøre DNS-endringer, vil nå kunne få mulighet til å gjøre endringer på egen hånd via det nye webgrensesnittet. Ta kontakt medhostmaster@uninett.no dersom dere er interessert i dette. Dokumentasjon til det nye grensesnittet finnes påhttp://www.nictool.com/docs/client/.  "},{"title":"Forhåndsjekking av DNS-data​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"docs/hostmaster/nictool/#forhåndsjekking-av-dns-data","content":"Den nye løsningen gjør en del konsistenssjekk av DNS-data før de publiseres. Dersom konsistenssjekken feiler, vil ikke DNS-data bli publisert. Denne sjekken baserer seg på bruk av programmetnamed-checkzone. Dette programmet har en rekke opsjoner som regulerer hva som skal betraktes som feil. I vårt tilfelle kommer kjøringen til å se slik ut: named-checkzone -i full -k fail -m fail -M fail -n fail -S fail Vi har lagt inn en mulighet for at hver enkelt kan kjøre denne forhåndsjekken direkte fra web-grensesnittet via menyvalget 'Check Zones'. Det er derfor anbefalt at man kjører denne sjekken etter å ha gjort endringer i grensesnittet.  Resultatet av kjøringen vises direkte i web-grensesnittet. Eventuelle feil markeres med rødt.  I dette eksemplet har NAPTR-posten for få felt oppgitt; 'replacement' feltet er utelatt. For definisjonen av NAPTR-posten se forøvrig RFC 2915.  "},{"title":"Kjente feilmeldinger fra sonesjekk:​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"docs/hostmaster/nictool/#kjente-feilmeldinger-fra-sonesjekk","content":""},{"title":"CNAME and other data​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"docs/hostmaster/nictool/#cname-and-other-data","content":"Det er forsøkt registrere et alias med samme navn som et eksisterende innslag, og det er ikke mulig. CNAME betyr &quot;alle data for dette navnet finner du over der på det andre navnet&quot;. En sone skal alltid ha en SOA-post og NS-poster registrert på selve sonenavnet. Det betyr at det ikke er mulig i tillegg å registrere en CNAME-post på selve sonenavnet. For web-tjenester som skal være nåbar på selve sonenavnet må man følgelig registrere adresse-informasjonen for web-serveren (via A og evt. AAAA) i stedet. "},{"title":"... is a CNAME ... (illegal)​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"docs/hostmaster/nictool/#-is-a-cname--illegal","content":"Flere posttyper inneholder pekere til andre navn der definisjonen for posttypen sier at det navnet man peker på ikke er tillatt å være en CNAME-post. Eksempler her er MX og SRV: disse må peke på navn som har enten A eller AAAA poster registrert direkte på seg.  "},{"title":"Registrering av revers-soner​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"docs/hostmaster/nictool/#registrering-av-revers-soner","content":"Når man har fått tildelt en revers-sone med maske som er mindre enn /24, så må soner og innhold registreres ihhtRFC 2317 Eksempel: Dersom man har fått tildelt adresse-rommet 158.36.100.128/25, så kan man ikke registrere sonen 100.36.158.in-addr.arpa, fordi det betyr at man &quot;overtar&quot; hele /24-adresserommet, når man bare har fått delegerten del av adresserommet. Istedet skal man registrere sonen 128.100.36.158.in-addr.arpa, og så kan man lage PTR-innslag i denne.  "},{"title":"DNSSEC​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"docs/hostmaster/nictool/#dnssec","content":"For å signalisere at en sone skal signeres medDNSSEC, så er det nødvendig å registrere en dummy TXT-record _please-sign, med vilkårlig verdi, slik:  Dette vil plukkes opp av det bakenforliggende DNSSEC-maskineriet, som vil sørge for at alle poster i sonen blir signert. Det blir også etterhvert generert en DS-post (Delegation Signer), denne må plasseres i modersonen. Merk at for soner som blir DNSSEC- signert, så blir MNAME-feltet i SOA-posten overstyrt, det settes inn ns.uninett.no i dette feltet. Den ferdig DNSSEC-signerte sonen blir publisert med ns.uninett.nosom master navnetjener, og det er derfor også naturlig å hans.uninett.no med i NS-settet for sonen. Vi har automatisk provisjonering av slave-navnetjeneste pånn.uninett.no og nac.no for soner betjent av Nictool, inklusive DNSSEC-signerte soner, så disse kan dere fritt velge å føre opp i NS-settet for sonen. For geografisk diversitet bør nac.no være med i NS-settet, da den er plassert i Oslo. Resten av maskinene er lokalisert i Trondheim. Dersom du ønsker å bruke andre slavenavnetjenere enn de som Sikt driver trenger du å slave sonen(e) deres fra ns.uninett.no. Første gang dere tar en slik slave i bruk trenger dere å spørre oss om å åpne opp for soneoverføring fra den nye slaven. Dersom dere har DNSSEC-signerte soner anbefales det sterkt å bruke TSIG for å sikre integriteten til soneoverføringen.  "},{"title":"Kontaktinformasjon​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"docs/hostmaster/nictool/#kontaktinformasjon","content":"Spørsmål om Nictool kan rettes til hostmaster@uninett.no "},{"title":"Identitets og tilgangsstyring (Felles IAM)","type":0,"sectionRef":"#","url":"docs/iam/","content":"Identitets og tilgangsstyring (Felles IAM) Identitets- og tilgangsstyring (IAM) handler om å gi studenter, forskere og ansatte riktig tilgang til digitale systemer, tjenester og ressurser, samt avslutte tilgang for brukere som ikke lenger skal ha det. Les mer om IAM-tjenesten på sikt.no Her vil du finne overordnet systemdokumentasjon, og etterhvert brukerdokumentasjon. En overordnet arkitektur for IAM og gevinster vil være en gode steder å starte for å bedre forstå IAM. Felles IAM vil livssyklusen til studenter, ansatte og gjester, og opprette, endre og fjerne digitale kontoer basert på data fra kildesystemer. Felles IAM kan identifisere en person på tvers av utdanningsinstitusjoner, og generere et nasjonalt unikt brukernavn og en identifikator. Når en bruker møter en utdanningsinstisujon for første gang vil vedkommende møte en brukervennlig kontoaktivering, hvor man blant annet setter passordet, i henhold til felles passordpolicy. Noe av den mest sentrale funksjonaliteten i Felles IAM er tilgangsstyring til målsystemer, hvor tilganger kan settes basert på virksomhetsroller. Når tilgangsstyring er samlet og kontrollert fra et sted vil rapportering gi oversikt og kontroll, og bidra til å hjelpe med å etterlevere lovverk og standarder. Forvaltning av IAM på en institusjon er et samarbeid, hvor ansvar fordeles ut i organisasjonen, og er ikke begrenset til IT-avdelingen. Felles IAM er realisert med produktet Rapid Identity levert av Identity Automations. For mer tekniske dypdykk: Felles IAM datamodellREST API for integrasjoner mot målsystemer I referanser vil du finne flere lenker til andre kilder som dokumenterer løsningen ytterligere.","keywords":""}]